//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UPCData", Namespace="http://schemas.datacontract.org/2004/07/BevWebServiceData")]
    [System.SerializableAttribute()]
    public partial class UPCData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private short AmountInBottlek__BackingFieldField;
        
        private short BottleSizek__BackingFieldField;
        
        private float NozzleDiameterk__BackingFieldField;
        
        private int TagIDk__BackingFieldField;
        
        private System.Collections.Generic.Dictionary<int, double> ViscocityByTemperaturek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AmountInBottle>k__BackingField", IsRequired=true)]
        public short AmountInBottlek__BackingField {
            get {
                return this.AmountInBottlek__BackingFieldField;
            }
            set {
                if ((this.AmountInBottlek__BackingFieldField.Equals(value) != true)) {
                    this.AmountInBottlek__BackingFieldField = value;
                    this.RaisePropertyChanged("AmountInBottlek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<BottleSize>k__BackingField", IsRequired=true)]
        public short BottleSizek__BackingField {
            get {
                return this.BottleSizek__BackingFieldField;
            }
            set {
                if ((this.BottleSizek__BackingFieldField.Equals(value) != true)) {
                    this.BottleSizek__BackingFieldField = value;
                    this.RaisePropertyChanged("BottleSizek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<NozzleDiameter>k__BackingField", IsRequired=true)]
        public float NozzleDiameterk__BackingField {
            get {
                return this.NozzleDiameterk__BackingFieldField;
            }
            set {
                if ((this.NozzleDiameterk__BackingFieldField.Equals(value) != true)) {
                    this.NozzleDiameterk__BackingFieldField = value;
                    this.RaisePropertyChanged("NozzleDiameterk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<TagID>k__BackingField", IsRequired=true)]
        public int TagIDk__BackingField {
            get {
                return this.TagIDk__BackingFieldField;
            }
            set {
                if ((this.TagIDk__BackingFieldField.Equals(value) != true)) {
                    this.TagIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("TagIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ViscocityByTemperature>k__BackingField", IsRequired=true)]
        public System.Collections.Generic.Dictionary<int, double> ViscocityByTemperaturek__BackingField {
            get {
                return this.ViscocityByTemperaturek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ViscocityByTemperaturek__BackingFieldField, value) != true)) {
                    this.ViscocityByTemperaturek__BackingFieldField = value;
                    this.RaisePropertyChanged("ViscocityByTemperaturek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EngineSettings", Namespace="http://schemas.datacontract.org/2004/07/BevWebServiceData")]
    [System.SerializableAttribute()]
    public partial class EngineSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.Dictionary<string, string> FormulaValuesk__BackingFieldField;
        
        private string Formulak__BackingFieldField;
        
        private string IPAddressk__BackingFieldField;
        
        private short Portk__BackingFieldField;
        
        private short SleepTimek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<FormulaValues>k__BackingField", IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> FormulaValuesk__BackingField {
            get {
                return this.FormulaValuesk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FormulaValuesk__BackingFieldField, value) != true)) {
                    this.FormulaValuesk__BackingFieldField = value;
                    this.RaisePropertyChanged("FormulaValuesk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Formula>k__BackingField", IsRequired=true)]
        public string Formulak__BackingField {
            get {
                return this.Formulak__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Formulak__BackingFieldField, value) != true)) {
                    this.Formulak__BackingFieldField = value;
                    this.RaisePropertyChanged("Formulak__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IPAddress>k__BackingField", IsRequired=true)]
        public string IPAddressk__BackingField {
            get {
                return this.IPAddressk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressk__BackingFieldField, value) != true)) {
                    this.IPAddressk__BackingFieldField = value;
                    this.RaisePropertyChanged("IPAddressk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Port>k__BackingField", IsRequired=true)]
        public short Portk__BackingField {
            get {
                return this.Portk__BackingFieldField;
            }
            set {
                if ((this.Portk__BackingFieldField.Equals(value) != true)) {
                    this.Portk__BackingFieldField = value;
                    this.RaisePropertyChanged("Portk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<SleepTime>k__BackingField", IsRequired=true)]
        public short SleepTimek__BackingField {
            get {
                return this.SleepTimek__BackingFieldField;
            }
            set {
                if ((this.SleepTimek__BackingFieldField.Equals(value) != true)) {
                    this.SleepTimek__BackingFieldField = value;
                    this.RaisePropertyChanged("SleepTimek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PourData", Namespace="http://schemas.datacontract.org/2004/07/BevWebServiceData")]
    [System.SerializableAttribute()]
    public partial class PourData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int DeviceIDk__BackingFieldField;
        
        private int EventIDk__BackingFieldField;
        
        private short PourAmountk__BackingFieldField;
        
        private System.TimeSpan PourTimek__BackingFieldField;
        
        private byte[] RawDatak__BackingFieldField;
        
        private int TagIDk__BackingFieldField;
        
        private short Temperaturek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<DeviceID>k__BackingField", IsRequired=true)]
        public int DeviceIDk__BackingField {
            get {
                return this.DeviceIDk__BackingFieldField;
            }
            set {
                if ((this.DeviceIDk__BackingFieldField.Equals(value) != true)) {
                    this.DeviceIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("DeviceIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<EventID>k__BackingField", IsRequired=true)]
        public int EventIDk__BackingField {
            get {
                return this.EventIDk__BackingFieldField;
            }
            set {
                if ((this.EventIDk__BackingFieldField.Equals(value) != true)) {
                    this.EventIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("EventIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PourAmount>k__BackingField", IsRequired=true)]
        public short PourAmountk__BackingField {
            get {
                return this.PourAmountk__BackingFieldField;
            }
            set {
                if ((this.PourAmountk__BackingFieldField.Equals(value) != true)) {
                    this.PourAmountk__BackingFieldField = value;
                    this.RaisePropertyChanged("PourAmountk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PourTime>k__BackingField", IsRequired=true)]
        public System.TimeSpan PourTimek__BackingField {
            get {
                return this.PourTimek__BackingFieldField;
            }
            set {
                if ((this.PourTimek__BackingFieldField.Equals(value) != true)) {
                    this.PourTimek__BackingFieldField = value;
                    this.RaisePropertyChanged("PourTimek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<RawData>k__BackingField", IsRequired=true)]
        public byte[] RawDatak__BackingField {
            get {
                return this.RawDatak__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.RawDatak__BackingFieldField, value) != true)) {
                    this.RawDatak__BackingFieldField = value;
                    this.RaisePropertyChanged("RawDatak__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<TagID>k__BackingField", IsRequired=true)]
        public int TagIDk__BackingField {
            get {
                return this.TagIDk__BackingFieldField;
            }
            set {
                if ((this.TagIDk__BackingFieldField.Equals(value) != true)) {
                    this.TagIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("TagIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Temperature>k__BackingField", IsRequired=true)]
        public short Temperaturek__BackingField {
            get {
                return this.Temperaturek__BackingFieldField;
            }
            set {
                if ((this.Temperaturek__BackingFieldField.Equals(value) != true)) {
                    this.Temperaturek__BackingFieldField = value;
                    this.RaisePropertyChanged("Temperaturek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagPhase", Namespace="http://schemas.datacontract.org/2004/07/BevWebServiceData")]
    [System.SerializableAttribute()]
    public partial class TagPhase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private short BatteryVoltagek__BackingFieldField;
        
        private System.DateTime EventTimek__BackingFieldField;
        
        private WebApplication1.ServiceReference1.TagPhaseType EventTypek__BackingFieldField;
        
        private int TagIDk__BackingFieldField;
        
        private short Temperaturek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<BatteryVoltage>k__BackingField", IsRequired=true)]
        public short BatteryVoltagek__BackingField {
            get {
                return this.BatteryVoltagek__BackingFieldField;
            }
            set {
                if ((this.BatteryVoltagek__BackingFieldField.Equals(value) != true)) {
                    this.BatteryVoltagek__BackingFieldField = value;
                    this.RaisePropertyChanged("BatteryVoltagek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<EventTime>k__BackingField", IsRequired=true)]
        public System.DateTime EventTimek__BackingField {
            get {
                return this.EventTimek__BackingFieldField;
            }
            set {
                if ((this.EventTimek__BackingFieldField.Equals(value) != true)) {
                    this.EventTimek__BackingFieldField = value;
                    this.RaisePropertyChanged("EventTimek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<EventType>k__BackingField", IsRequired=true)]
        public WebApplication1.ServiceReference1.TagPhaseType EventTypek__BackingField {
            get {
                return this.EventTypek__BackingFieldField;
            }
            set {
                if ((this.EventTypek__BackingFieldField.Equals(value) != true)) {
                    this.EventTypek__BackingFieldField = value;
                    this.RaisePropertyChanged("EventTypek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<TagID>k__BackingField", IsRequired=true)]
        public int TagIDk__BackingField {
            get {
                return this.TagIDk__BackingFieldField;
            }
            set {
                if ((this.TagIDk__BackingFieldField.Equals(value) != true)) {
                    this.TagIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("TagIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Temperature>k__BackingField", IsRequired=true)]
        public short Temperaturek__BackingField {
            get {
                return this.Temperaturek__BackingFieldField;
            }
            set {
                if ((this.Temperaturek__BackingFieldField.Equals(value) != true)) {
                    this.Temperaturek__BackingFieldField = value;
                    this.RaisePropertyChanged("Temperaturek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagPhaseType", Namespace="http://schemas.datacontract.org/2004/07/BevWebServiceData")]
    public enum TagPhaseType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Heartbeat = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connect = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disconnect = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dormant = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IPourEngineData")]
    public interface IPourEngineData {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPourEngineData/GetUPCByTag", ReplyAction="http://tempuri.org/IPourEngineData/GetUPCByTagResponse")]
        WebApplication1.ServiceReference1.UPCData GetUPCByTag(int tagID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPourEngineData/GetSettings", ReplyAction="http://tempuri.org/IPourEngineData/GetSettingsResponse")]
        WebApplication1.ServiceReference1.EngineSettings GetSettings(int deviceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPourEngineData/PushPourData", ReplyAction="http://tempuri.org/IPourEngineData/PushPourDataResponse")]
        void PushPourData(WebApplication1.ServiceReference1.PourData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPourEngineData/PushTagEvent", ReplyAction="http://tempuri.org/IPourEngineData/PushTagEventResponse")]
        void PushTagEvent(WebApplication1.ServiceReference1.TagPhase data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPourEngineData/PushStoredEvents", ReplyAction="http://tempuri.org/IPourEngineData/PushStoredEventsResponse")]
        void PushStoredEvents(System.Collections.Generic.List<WebApplication1.ServiceReference1.TagPhase> data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPourEngineDataChannel : WebApplication1.ServiceReference1.IPourEngineData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PourEngineDataClient : System.ServiceModel.ClientBase<WebApplication1.ServiceReference1.IPourEngineData>, WebApplication1.ServiceReference1.IPourEngineData {
        
        public PourEngineDataClient() {
        }
        
        public PourEngineDataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PourEngineDataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PourEngineDataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PourEngineDataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApplication1.ServiceReference1.UPCData GetUPCByTag(int tagID) {
            return base.Channel.GetUPCByTag(tagID);
        }
        
        public WebApplication1.ServiceReference1.EngineSettings GetSettings(int deviceID) {
            return base.Channel.GetSettings(deviceID);
        }
        
        public void PushPourData(WebApplication1.ServiceReference1.PourData data) {
            base.Channel.PushPourData(data);
        }
        
        public void PushTagEvent(WebApplication1.ServiceReference1.TagPhase data) {
            base.Channel.PushTagEvent(data);
        }
        
        public void PushStoredEvents(System.Collections.Generic.List<WebApplication1.ServiceReference1.TagPhase> data) {
            base.Channel.PushStoredEvents(data);
        }
    }
}
