//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RemoteBranding.svcBeverageManagement {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PourInformation", Namespace="http://schemas.datacontract.org/2004/07/Jaxis.BeverageManagement.Plugin")]
    [System.SerializableAttribute()]
    public partial class PourInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountLeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BatteryVoltageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PourAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PourTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RootCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPCNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UPCSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AmountLeft {
            get {
                return this.AmountLeftField;
            }
            set {
                if ((this.AmountLeftField.Equals(value) != true)) {
                    this.AmountLeftField = value;
                    this.RaisePropertyChanged("AmountLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BatteryVoltage {
            get {
                return this.BatteryVoltageField;
            }
            set {
                if ((this.BatteryVoltageField.Equals(value) != true)) {
                    this.BatteryVoltageField = value;
                    this.RaisePropertyChanged("BatteryVoltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemNumber {
            get {
                return this.ItemNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNumberField, value) != true)) {
                    this.ItemNumberField = value;
                    this.RaisePropertyChanged("ItemNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PourAmount {
            get {
                return this.PourAmountField;
            }
            set {
                if ((this.PourAmountField.Equals(value) != true)) {
                    this.PourAmountField = value;
                    this.RaisePropertyChanged("PourAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PourTime {
            get {
                return this.PourTimeField;
            }
            set {
                if ((this.PourTimeField.Equals(value) != true)) {
                    this.PourTimeField = value;
                    this.RaisePropertyChanged("PourTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RootCategory {
            get {
                return this.RootCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.RootCategoryField, value) != true)) {
                    this.RootCategoryField = value;
                    this.RaisePropertyChanged("RootCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagNumber {
            get {
                return this.TagNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNumberField, value) != true)) {
                    this.TagNumberField = value;
                    this.RaisePropertyChanged("TagNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPCName {
            get {
                return this.UPCNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UPCNameField, value) != true)) {
                    this.UPCNameField = value;
                    this.RaisePropertyChanged("UPCName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UPCSize {
            get {
                return this.UPCSizeField;
            }
            set {
                if ((this.UPCSizeField.Equals(value) != true)) {
                    this.UPCSizeField = value;
                    this.RaisePropertyChanged("UPCSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="svcBeverageManagement.IBeverageManagementAPI")]
    public interface IBeverageManagementAPI {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeverageManagementAPI/GetPourInformation", ReplyAction="http://tempuri.org/IBeverageManagementAPI/GetPourInformationResponse")]
        System.Collections.Generic.List<RemoteBranding.svcBeverageManagement.PourInformation> GetPourInformation(System.DateTime _startTime, System.DateTime _endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeverageManagementAPI/BrandBottle", ReplyAction="http://tempuri.org/IBeverageManagementAPI/BrandBottleResponse")]
        bool BrandBottle(string _tagID, string _upc, System.Guid _nozzle);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBeverageManagementAPIChannel : RemoteBranding.svcBeverageManagement.IBeverageManagementAPI, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BeverageManagementAPIClient : System.ServiceModel.ClientBase<RemoteBranding.svcBeverageManagement.IBeverageManagementAPI>, RemoteBranding.svcBeverageManagement.IBeverageManagementAPI {
        
        public BeverageManagementAPIClient() {
        }
        
        public BeverageManagementAPIClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BeverageManagementAPIClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BeverageManagementAPIClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BeverageManagementAPIClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<RemoteBranding.svcBeverageManagement.PourInformation> GetPourInformation(System.DateTime _startTime, System.DateTime _endTime) {
            return base.Channel.GetPourInformation(_startTime, _endTime);
        }
        
        public bool BrandBottle(string _tagID, string _upc, System.Guid _nozzle) {
            return base.Channel.BrandBottle(_tagID, _upc, _nozzle);
        }
    }
}
