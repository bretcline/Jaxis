//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.EntityClient;
using System.Data.Objects;
using Jaxis.DrinkInventory.Reporting.Data.POCO;

namespace Jaxis.DrinkInventory.Reporting.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DrinkReportingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DrinkReportingEntities object using the connection string found in the 'DrinkReportingEntities' section of the application configuration file.
        /// </summary>
        public DrinkReportingEntities() : base("name=DrinkReportingEntities", "DrinkReportingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DrinkReportingEntities object.
        /// </summary>
        public DrinkReportingEntities(string connectionString) : base(connectionString, "DrinkReportingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DrinkReportingEntities object.
        /// </summary>
        public DrinkReportingEntities(EntityConnection connection) : base(connection, "DrinkReportingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        private ObjectSet<Alert> _Alerts;
        public ObjectSet<Alert> Alerts
        {
            get
            {
                if ((_Alerts == null))
                {
                    _Alerts = base.CreateObjectSet<Alert>("Alerts");
                }
                return _Alerts;
            }
        }
    
        private ObjectSet<AreaMembership> _AreaMemberships;
        public ObjectSet<AreaMembership> AreaMemberships
        {
            get
            {
                if ((_AreaMemberships == null))
                {
                    _AreaMemberships = base.CreateObjectSet<AreaMembership>("AreaMemberships");
                }
                return _AreaMemberships;
            }
        }
    
        private ObjectSet<Area> _Areas;
        public ObjectSet<Area> Areas
        {
            get
            {
                if ((_Areas == null))
                {
                    _Areas = base.CreateObjectSet<Area>("Areas");
                }
                return _Areas;
            }
        }
    
        private ObjectSet<Column> _Columns;
        public ObjectSet<Column> Columns
        {
            get
            {
                if ((_Columns == null))
                {
                    _Columns = base.CreateObjectSet<Column>("Columns");
                }
                return _Columns;
            }
        }
    
        private ObjectSet<Device> _Devices;
        public ObjectSet<Device> Devices
        {
            get
            {
                if ((_Devices == null))
                {
                    _Devices = base.CreateObjectSet<Device>("Devices");
                }
                return _Devices;
            }
        }
    
        private ObjectSet<Organization> _Organizations;
        public ObjectSet<Organization> Organizations
        {
            get
            {
                if ((_Organizations == null))
                {
                    _Organizations = base.CreateObjectSet<Organization>("Organizations");
                }
                return _Organizations;
            }
        }
    
        private ObjectSet<Parameter> _Parameters;
        public ObjectSet<Parameter> Parameters
        {
            get
            {
                if ((_Parameters == null))
                {
                    _Parameters = base.CreateObjectSet<Parameter>("Parameters");
                }
                return _Parameters;
            }
        }
    
        private ObjectSet<POSTicketItem> _POSTicketItems;
        public ObjectSet<POSTicketItem> POSTicketItems
        {
            get
            {
                if ((_POSTicketItems == null))
                {
                    _POSTicketItems = base.CreateObjectSet<POSTicketItem>("POSTicketItems");
                }
                return _POSTicketItems;
            }
        }
    
        private ObjectSet<Pour> _Pours;
        public ObjectSet<Pour> Pours
        {
            get
            {
                if ((_Pours == null))
                {
                    _Pours = base.CreateObjectSet<Pour>("Pours");
                }
                return _Pours;
            }
        }
    
        private ObjectSet<Report> _Reports;
        public ObjectSet<Report> Reports
        {
            get
            {
                if ((_Reports == null))
                {
                    _Reports = base.CreateObjectSet<Report>("Reports");
                }
                return _Reports;
            }
        }
    
        private ObjectSet<Schema> _Schemata;
        public ObjectSet<Schema> Schemata
        {
            get
            {
                if ((_Schemata == null))
                {
                    _Schemata = base.CreateObjectSet<Schema>("Schemata");
                }
                return _Schemata;
            }
        }
    
        private ObjectSet<SecurityView> _SecurityViews;
        public ObjectSet<SecurityView> SecurityViews
        {
            get
            {
                if ((_SecurityViews == null))
                {
                    _SecurityViews = base.CreateObjectSet<SecurityView>("SecurityViews");
                }
                return _SecurityViews;
            }
        }
    
        private ObjectSet<Session> _Sessions;
        public ObjectSet<Session> Sessions
        {
            get
            {
                if ((_Sessions == null))
                {
                    _Sessions = base.CreateObjectSet<Session>("Sessions");
                }
                return _Sessions;
            }
        }
    
        private ObjectSet<UPC> _UPCs;
        public ObjectSet<UPC> UPCs
        {
            get
            {
                if ((_UPCs == null))
                {
                    _UPCs = base.CreateObjectSet<UPC>("UPCs");
                }
                return _UPCs;
            }
        }
    
        private ObjectSet<UserGroupMembership> _UserGroupMemberships;
        public ObjectSet<UserGroupMembership> UserGroupMemberships
        {
            get
            {
                if ((_UserGroupMemberships == null))
                {
                    _UserGroupMemberships = base.CreateObjectSet<UserGroupMembership>("UserGroupMemberships");
                }
                return _UserGroupMemberships;
            }
        }
    
        private ObjectSet<UserGroup> _UserGroups;
        public ObjectSet<UserGroup> UserGroups
        {
            get
            {
                if ((_UserGroups == null))
                {
                    _UserGroups = base.CreateObjectSet<UserGroup>("UserGroups");
                }
                return _UserGroups;
            }
        }
    
        private ObjectSet<UserGroupXOrganization> _UserGroupXOrganizations;
        public ObjectSet<UserGroupXOrganization> UserGroupXOrganizations
        {
            get
            {
                if ((_UserGroupXOrganizations == null))
                {
                    _UserGroupXOrganizations = base.CreateObjectSet<UserGroupXOrganization>("UserGroupXOrganizations");
                }
                return _UserGroupXOrganizations;
            }
        }
    
        private ObjectSet<User> _Users;
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }

        #endregion
    }
    

    #endregion
    
    
}
