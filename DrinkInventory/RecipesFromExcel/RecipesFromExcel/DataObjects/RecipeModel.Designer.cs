//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Ingredients_CategoryID", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecipesFromExcel.DataObjects.Category), "Ingredient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Ingredient), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_SubCategories_SubCategory", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecipesFromExcel.DataObjects.Category), "Category1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Category), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_UPCs_SubCategory", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Category), "UPC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.UPC), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Ingredients_ManufacturerID", "Manufacturer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecipesFromExcel.DataObjects.Manufacturer), "Ingredient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Ingredient), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Ingredients_Recipe", "Recipe", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Recipe), "Ingredient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Ingredient), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Ingredients_StandardPour", "StandardPour", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.StandardPour), "Ingredient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Ingredient), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Ingredients_UPCID", "UPC", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecipesFromExcel.DataObjects.UPC), "Ingredient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Ingredient), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_UPCs_Manufacturers", "Manufacturer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Manufacturer), "UPC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.UPC), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_TicketItemAliases_Recipe", "Recipe", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecipesFromExcel.DataObjects.Recipe), "TicketItemAlias", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.TicketItemAlias), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_UPCs_SizeType", "SizeType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.SizeType), "UPC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.UPC), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_ActivityLogs_Devices", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Device), "ActivityLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.ActivityLog), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_ActivityLogs_Locations", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Location), "ActivityLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.ActivityLog), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_ActivityLogs_Tags", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Tag), "ActivityLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.ActivityLog), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Categories_StandardNozzles", "StandardNozzle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecipesFromExcel.DataObjects.StandardNozzle), "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Category), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Categories_StandardPricing", "StandardPrice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecipesFromExcel.DataObjects.StandardPrice), "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Category), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_DeviceAlerts_Devices", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Device), "DeviceAlert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.DeviceAlert), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Locations_Devices", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecipesFromExcel.DataObjects.Device), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Location), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_TagActivities_Devices", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Device), "TagActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.TagActivity), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_TagMoves_Devices", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Device), "TagMove", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.TagMove), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_GroupsXSecurableItems_Groups", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Group), "GroupsXSecurableItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.GroupsXSecurableItem), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_GroupXReport_Groups", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Group), "GroupXReport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.GroupXReport), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_GroupsXSecurableItems_SecurableItems", "SecurableItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.SecurableItem), "GroupsXSecurableItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.GroupsXSecurableItem), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_GroupXReport_Reports", "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Report), "GroupXReport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.GroupXReport), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Inventories_Location", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Location), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Inventory), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Inventories_Tags", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecipesFromExcel.DataObjects.Tag), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Inventory), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Inventories_UPC", "UPC", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.UPC), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Inventory), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Locations_Locations", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecipesFromExcel.DataObjects.Location), "Location1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Location), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Locations_Organization", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Organization), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Location), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_ParLevel_Location", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Location), "ParLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.ParLevel), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_POSTickets_Locations", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Location), "POSTicket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.POSTicket), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_TagAlerts_Locations", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Location), "TagAlert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.TagAlert), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_TagMoves_Locations", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Location), "TagMove", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.TagMove), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Tags_Locations", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Location), "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Tag), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_UsersXOrganizations_Organization", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Organization), "UsersXOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.UsersXOrganization), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_ParLevel_UPC", "UPC", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.UPC), "ParLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.ParLevel), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_POSTicketItems_POSTickets", "POSTicket", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.POSTicket), "POSTicketItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.POSTicketItem), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_ReportParameters_Reports", "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Report), "ReportParameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.ReportParameter), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Tags_StandardNozzles", "StandardNozzle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecipesFromExcel.DataObjects.StandardNozzle), "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Tag), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_UPCs_StandardNozzles", "StandardNozzle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecipesFromExcel.DataObjects.StandardNozzle), "UPC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.UPC), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_UPCs_StandardPricing", "StandardPrice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecipesFromExcel.DataObjects.StandardPrice), "UPC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.UPC), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_TagActivities_Tags", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Tag), "TagActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.TagActivity), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_TagAlerts_Tags", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Tag), "TagAlert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.TagAlert), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_TagMoves_Tags", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Tag), "TagMove", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.TagMove), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_UserSessions_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.User), "UserSession", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.UserSession), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_UsersXOrganizations_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.User), "UsersXOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.UsersXOrganization), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "UsersXGroups", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Group), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.User))]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Pours_Devices", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Device), "Pour", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Pour), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Pours_TicketItems", "POSTicketItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecipesFromExcel.DataObjects.POSTicketItem), "Pour", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Pour), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Pours_Tags", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.Tag), "Pour", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Pour), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Pours_UPCs", "UPC", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecipesFromExcel.DataObjects.UPC), "Pour", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Pour), true)]
[assembly: EdmRelationshipAttribute("RecipeModel", "FK_Pours_Ingredients", "Ingredient", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecipesFromExcel.DataObjects.Ingredient), "Pour", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecipesFromExcel.DataObjects.Pour), true)]

#endregion

namespace RecipesFromExcel.DataObjects
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RecipeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RecipeEntities object using the connection string found in the 'RecipeEntities' section of the application configuration file.
        /// </summary>
        public RecipeEntities() : base("name=RecipeEntities", "RecipeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RecipeEntities object.
        /// </summary>
        public RecipeEntities(string connectionString) : base(connectionString, "RecipeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RecipeEntities object.
        /// </summary>
        public RecipeEntities(EntityConnection connection) : base(connection, "RecipeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ingredient> Ingredients
        {
            get
            {
                if ((_Ingredients == null))
                {
                    _Ingredients = base.CreateObjectSet<Ingredient>("Ingredients");
                }
                return _Ingredients;
            }
        }
        private ObjectSet<Ingredient> _Ingredients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Manufacturer> Manufacturers
        {
            get
            {
                if ((_Manufacturers == null))
                {
                    _Manufacturers = base.CreateObjectSet<Manufacturer>("Manufacturers");
                }
                return _Manufacturers;
            }
        }
        private ObjectSet<Manufacturer> _Manufacturers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Recipe> Recipes
        {
            get
            {
                if ((_Recipes == null))
                {
                    _Recipes = base.CreateObjectSet<Recipe>("Recipes");
                }
                return _Recipes;
            }
        }
        private ObjectSet<Recipe> _Recipes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SizeType> SizeTypes
        {
            get
            {
                if ((_SizeTypes == null))
                {
                    _SizeTypes = base.CreateObjectSet<SizeType>("SizeTypes");
                }
                return _SizeTypes;
            }
        }
        private ObjectSet<SizeType> _SizeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StandardPour> StandardPours
        {
            get
            {
                if ((_StandardPours == null))
                {
                    _StandardPours = base.CreateObjectSet<StandardPour>("StandardPours");
                }
                return _StandardPours;
            }
        }
        private ObjectSet<StandardPour> _StandardPours;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TicketItemAlias> TicketItemAliases
        {
            get
            {
                if ((_TicketItemAliases == null))
                {
                    _TicketItemAliases = base.CreateObjectSet<TicketItemAlias>("TicketItemAliases");
                }
                return _TicketItemAliases;
            }
        }
        private ObjectSet<TicketItemAlias> _TicketItemAliases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UPC> UPCs
        {
            get
            {
                if ((_UPCs == null))
                {
                    _UPCs = base.CreateObjectSet<UPC>("UPCs");
                }
                return _UPCs;
            }
        }
        private ObjectSet<UPC> _UPCs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivityLog> ActivityLogs
        {
            get
            {
                if ((_ActivityLogs == null))
                {
                    _ActivityLogs = base.CreateObjectSet<ActivityLog>("ActivityLogs");
                }
                return _ActivityLogs;
            }
        }
        private ObjectSet<ActivityLog> _ActivityLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdministrativeValue> AdministrativeValues
        {
            get
            {
                if ((_AdministrativeValues == null))
                {
                    _AdministrativeValues = base.CreateObjectSet<AdministrativeValue>("AdministrativeValues");
                }
                return _AdministrativeValues;
            }
        }
        private ObjectSet<AdministrativeValue> _AdministrativeValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DatabaseVersion> DatabaseVersions
        {
            get
            {
                if ((_DatabaseVersions == null))
                {
                    _DatabaseVersions = base.CreateObjectSet<DatabaseVersion>("DatabaseVersions");
                }
                return _DatabaseVersions;
            }
        }
        private ObjectSet<DatabaseVersion> _DatabaseVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeviceAlert> DeviceAlerts
        {
            get
            {
                if ((_DeviceAlerts == null))
                {
                    _DeviceAlerts = base.CreateObjectSet<DeviceAlert>("DeviceAlerts");
                }
                return _DeviceAlerts;
            }
        }
        private ObjectSet<DeviceAlert> _DeviceAlerts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Device> Devices
        {
            get
            {
                if ((_Devices == null))
                {
                    _Devices = base.CreateObjectSet<Device>("Devices");
                }
                return _Devices;
            }
        }
        private ObjectSet<Device> _Devices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupsXSecurableItem> GroupsXSecurableItems
        {
            get
            {
                if ((_GroupsXSecurableItems == null))
                {
                    _GroupsXSecurableItems = base.CreateObjectSet<GroupsXSecurableItem>("GroupsXSecurableItems");
                }
                return _GroupsXSecurableItems;
            }
        }
        private ObjectSet<GroupsXSecurableItem> _GroupsXSecurableItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupXReport> GroupXReports
        {
            get
            {
                if ((_GroupXReports == null))
                {
                    _GroupXReports = base.CreateObjectSet<GroupXReport>("GroupXReports");
                }
                return _GroupXReports;
            }
        }
        private ObjectSet<GroupXReport> _GroupXReports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Inventory> Inventories
        {
            get
            {
                if ((_Inventories == null))
                {
                    _Inventories = base.CreateObjectSet<Inventory>("Inventories");
                }
                return _Inventories;
            }
        }
        private ObjectSet<Inventory> _Inventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Move> Moves
        {
            get
            {
                if ((_Moves == null))
                {
                    _Moves = base.CreateObjectSet<Move>("Moves");
                }
                return _Moves;
            }
        }
        private ObjectSet<Move> _Moves;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organization> Organizations
        {
            get
            {
                if ((_Organizations == null))
                {
                    _Organizations = base.CreateObjectSet<Organization>("Organizations");
                }
                return _Organizations;
            }
        }
        private ObjectSet<Organization> _Organizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParLevel> ParLevels
        {
            get
            {
                if ((_ParLevels == null))
                {
                    _ParLevels = base.CreateObjectSet<ParLevel>("ParLevels");
                }
                return _ParLevels;
            }
        }
        private ObjectSet<ParLevel> _ParLevels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<POSTicketItemModifier> POSTicketItemModifiers
        {
            get
            {
                if ((_POSTicketItemModifiers == null))
                {
                    _POSTicketItemModifiers = base.CreateObjectSet<POSTicketItemModifier>("POSTicketItemModifiers");
                }
                return _POSTicketItemModifiers;
            }
        }
        private ObjectSet<POSTicketItemModifier> _POSTicketItemModifiers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<POSTicketItem> POSTicketItems
        {
            get
            {
                if ((_POSTicketItems == null))
                {
                    _POSTicketItems = base.CreateObjectSet<POSTicketItem>("POSTicketItems");
                }
                return _POSTicketItems;
            }
        }
        private ObjectSet<POSTicketItem> _POSTicketItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<POSTicket> POSTickets
        {
            get
            {
                if ((_POSTickets == null))
                {
                    _POSTickets = base.CreateObjectSet<POSTicket>("POSTickets");
                }
                return _POSTickets;
            }
        }
        private ObjectSet<POSTicket> _POSTickets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Quality> Qualities
        {
            get
            {
                if ((_Qualities == null))
                {
                    _Qualities = base.CreateObjectSet<Quality>("Qualities");
                }
                return _Qualities;
            }
        }
        private ObjectSet<Quality> _Qualities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportParameter> ReportParameters
        {
            get
            {
                if ((_ReportParameters == null))
                {
                    _ReportParameters = base.CreateObjectSet<ReportParameter>("ReportParameters");
                }
                return _ReportParameters;
            }
        }
        private ObjectSet<ReportParameter> _ReportParameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Report> Reports
        {
            get
            {
                if ((_Reports == null))
                {
                    _Reports = base.CreateObjectSet<Report>("Reports");
                }
                return _Reports;
            }
        }
        private ObjectSet<Report> _Reports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurableItem> SecurableItems
        {
            get
            {
                if ((_SecurableItems == null))
                {
                    _SecurableItems = base.CreateObjectSet<SecurableItem>("SecurableItems");
                }
                return _SecurableItems;
            }
        }
        private ObjectSet<SecurableItem> _SecurableItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StandardNozzle> StandardNozzles
        {
            get
            {
                if ((_StandardNozzles == null))
                {
                    _StandardNozzles = base.CreateObjectSet<StandardNozzle>("StandardNozzles");
                }
                return _StandardNozzles;
            }
        }
        private ObjectSet<StandardNozzle> _StandardNozzles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StandardPrice> StandardPrices
        {
            get
            {
                if ((_StandardPrices == null))
                {
                    _StandardPrices = base.CreateObjectSet<StandardPrice>("StandardPrices");
                }
                return _StandardPrices;
            }
        }
        private ObjectSet<StandardPrice> _StandardPrices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TagActivity> TagActivities
        {
            get
            {
                if ((_TagActivities == null))
                {
                    _TagActivities = base.CreateObjectSet<TagActivity>("TagActivities");
                }
                return _TagActivities;
            }
        }
        private ObjectSet<TagActivity> _TagActivities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TagAlert> TagAlerts
        {
            get
            {
                if ((_TagAlerts == null))
                {
                    _TagAlerts = base.CreateObjectSet<TagAlert>("TagAlerts");
                }
                return _TagAlerts;
            }
        }
        private ObjectSet<TagAlert> _TagAlerts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TagMove> TagMoves
        {
            get
            {
                if ((_TagMoves == null))
                {
                    _TagMoves = base.CreateObjectSet<TagMove>("TagMoves");
                }
                return _TagMoves;
            }
        }
        private ObjectSet<TagMove> _TagMoves;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserSession> UserSessions
        {
            get
            {
                if ((_UserSessions == null))
                {
                    _UserSessions = base.CreateObjectSet<UserSession>("UserSessions");
                }
                return _UserSessions;
            }
        }
        private ObjectSet<UserSession> _UserSessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsersXOrganization> UsersXOrganizations
        {
            get
            {
                if ((_UsersXOrganizations == null))
                {
                    _UsersXOrganizations = base.CreateObjectSet<UsersXOrganization>("UsersXOrganizations");
                }
                return _UsersXOrganizations;
            }
        }
        private ObjectSet<UsersXOrganization> _UsersXOrganizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pour> Pours
        {
            get
            {
                if ((_Pours == null))
                {
                    _Pours = base.CreateObjectSet<Pour>("Pours");
                }
                return _Pours;
            }
        }
        private ObjectSet<Pour> _Pours;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ingredients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIngredients(Ingredient ingredient)
        {
            base.AddObject("Ingredients", ingredient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Manufacturers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManufacturers(Manufacturer manufacturer)
        {
            base.AddObject("Manufacturers", manufacturer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Recipes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecipes(Recipe recipe)
        {
            base.AddObject("Recipes", recipe);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SizeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSizeTypes(SizeType sizeType)
        {
            base.AddObject("SizeTypes", sizeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StandardPours EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStandardPours(StandardPour standardPour)
        {
            base.AddObject("StandardPours", standardPour);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TicketItemAliases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTicketItemAliases(TicketItemAlias ticketItemAlias)
        {
            base.AddObject("TicketItemAliases", ticketItemAlias);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UPCs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUPCs(UPC uPC)
        {
            base.AddObject("UPCs", uPC);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivityLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivityLogs(ActivityLog activityLog)
        {
            base.AddObject("ActivityLogs", activityLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdministrativeValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdministrativeValues(AdministrativeValue administrativeValue)
        {
            base.AddObject("AdministrativeValues", administrativeValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DatabaseVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDatabaseVersions(DatabaseVersion databaseVersion)
        {
            base.AddObject("DatabaseVersions", databaseVersion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeviceAlerts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeviceAlerts(DeviceAlert deviceAlert)
        {
            base.AddObject("DeviceAlerts", deviceAlert);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Devices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDevices(Device device)
        {
            base.AddObject("Devices", device);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupsXSecurableItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupsXSecurableItems(GroupsXSecurableItem groupsXSecurableItem)
        {
            base.AddObject("GroupsXSecurableItems", groupsXSecurableItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupXReports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupXReports(GroupXReport groupXReport)
        {
            base.AddObject("GroupXReports", groupXReport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Inventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventories(Inventory inventory)
        {
            base.AddObject("Inventories", inventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Moves EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMoves(Move move)
        {
            base.AddObject("Moves", move);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizations(Organization organization)
        {
            base.AddObject("Organizations", organization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParLevels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParLevels(ParLevel parLevel)
        {
            base.AddObject("ParLevels", parLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the POSTicketItemModifiers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPOSTicketItemModifiers(POSTicketItemModifier pOSTicketItemModifier)
        {
            base.AddObject("POSTicketItemModifiers", pOSTicketItemModifier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the POSTicketItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPOSTicketItems(POSTicketItem pOSTicketItem)
        {
            base.AddObject("POSTicketItems", pOSTicketItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the POSTickets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPOSTickets(POSTicket pOSTicket)
        {
            base.AddObject("POSTickets", pOSTicket);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Qualities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQualities(Quality quality)
        {
            base.AddObject("Qualities", quality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportParameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportParameters(ReportParameter reportParameter)
        {
            base.AddObject("ReportParameters", reportParameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReports(Report report)
        {
            base.AddObject("Reports", report);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurableItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurableItems(SecurableItem securableItem)
        {
            base.AddObject("SecurableItems", securableItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StandardNozzles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStandardNozzles(StandardNozzle standardNozzle)
        {
            base.AddObject("StandardNozzles", standardNozzle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StandardPrices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStandardPrices(StandardPrice standardPrice)
        {
            base.AddObject("StandardPrices", standardPrice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TagActivities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTagActivities(TagActivity tagActivity)
        {
            base.AddObject("TagActivities", tagActivity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TagAlerts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTagAlerts(TagAlert tagAlert)
        {
            base.AddObject("TagAlerts", tagAlert);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TagMoves EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTagMoves(TagMove tagMove)
        {
            base.AddObject("TagMoves", tagMove);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSessions(UserSession userSession)
        {
            base.AddObject("UserSessions", userSession);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersXOrganizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersXOrganizations(UsersXOrganization usersXOrganization)
        {
            base.AddObject("UsersXOrganizations", usersXOrganization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pours EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPours(Pour pour)
        {
            base.AddObject("Pours", pour);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="ActivityLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivityLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivityLog object.
        /// </summary>
        /// <param name="activityLogID">Initial value of the ActivityLogID property.</param>
        /// <param name="activityIndex">Initial value of the ActivityIndex property.</param>
        /// <param name="tagID">Initial value of the TagID property.</param>
        /// <param name="deviceID">Initial value of the DeviceID property.</param>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="activityTime">Initial value of the ActivityTime property.</param>
        /// <param name="signalStrength">Initial value of the SignalStrength property.</param>
        /// <param name="activityTypeID">Initial value of the ActivityTypeID property.</param>
        public static ActivityLog CreateActivityLog(global::System.Guid activityLogID, global::System.Int32 activityIndex, global::System.Guid tagID, global::System.Guid deviceID, global::System.Guid locationID, global::System.DateTime activityTime, global::System.Double signalStrength, global::System.Int32 activityTypeID)
        {
            ActivityLog activityLog = new ActivityLog();
            activityLog.ActivityLogID = activityLogID;
            activityLog.ActivityIndex = activityIndex;
            activityLog.TagID = tagID;
            activityLog.DeviceID = deviceID;
            activityLog.LocationID = locationID;
            activityLog.ActivityTime = activityTime;
            activityLog.SignalStrength = signalStrength;
            activityLog.ActivityTypeID = activityTypeID;
            return activityLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ActivityLogID
        {
            get
            {
                return _ActivityLogID;
            }
            set
            {
                if (_ActivityLogID != value)
                {
                    OnActivityLogIDChanging(value);
                    ReportPropertyChanging("ActivityLogID");
                    _ActivityLogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActivityLogID");
                    OnActivityLogIDChanged();
                }
            }
        }
        private global::System.Guid _ActivityLogID;
        partial void OnActivityLogIDChanging(global::System.Guid value);
        partial void OnActivityLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityIndex
        {
            get
            {
                return _ActivityIndex;
            }
            set
            {
                OnActivityIndexChanging(value);
                ReportPropertyChanging("ActivityIndex");
                _ActivityIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityIndex");
                OnActivityIndexChanged();
            }
        }
        private global::System.Int32 _ActivityIndex;
        partial void OnActivityIndexChanging(global::System.Int32 value);
        partial void OnActivityIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                OnTagIDChanging(value);
                ReportPropertyChanging("TagID");
                _TagID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagID");
                OnTagIDChanged();
            }
        }
        private global::System.Guid _TagID;
        partial void OnTagIDChanging(global::System.Guid value);
        partial void OnTagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DeviceID
        {
            get
            {
                return _DeviceID;
            }
            set
            {
                OnDeviceIDChanging(value);
                ReportPropertyChanging("DeviceID");
                _DeviceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceID");
                OnDeviceIDChanged();
            }
        }
        private global::System.Guid _DeviceID;
        partial void OnDeviceIDChanging(global::System.Guid value);
        partial void OnDeviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private global::System.Guid _LocationID;
        partial void OnLocationIDChanging(global::System.Guid value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ActivityTime
        {
            get
            {
                return _ActivityTime;
            }
            set
            {
                OnActivityTimeChanging(value);
                ReportPropertyChanging("ActivityTime");
                _ActivityTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityTime");
                OnActivityTimeChanged();
            }
        }
        private global::System.DateTime _ActivityTime;
        partial void OnActivityTimeChanging(global::System.DateTime value);
        partial void OnActivityTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SignalStrength
        {
            get
            {
                return _SignalStrength;
            }
            set
            {
                OnSignalStrengthChanging(value);
                ReportPropertyChanging("SignalStrength");
                _SignalStrength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SignalStrength");
                OnSignalStrengthChanged();
            }
        }
        private global::System.Double _SignalStrength;
        partial void OnSignalStrengthChanging(global::System.Double value);
        partial void OnSignalStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityTypeID
        {
            get
            {
                return _ActivityTypeID;
            }
            set
            {
                OnActivityTypeIDChanging(value);
                ReportPropertyChanging("ActivityTypeID");
                _ActivityTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityTypeID");
                OnActivityTypeIDChanged();
            }
        }
        private global::System.Int32 _ActivityTypeID;
        partial void OnActivityTypeIDChanging(global::System.Int32 value);
        partial void OnActivityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RawData
        {
            get
            {
                return _RawData;
            }
            set
            {
                OnRawDataChanging(value);
                ReportPropertyChanging("RawData");
                _RawData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RawData");
                OnRawDataChanged();
            }
        }
        private global::System.String _RawData;
        partial void OnRawDataChanging(global::System.String value);
        partial void OnRawDataChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_ActivityLogs_Devices", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_ActivityLogs_Devices", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_ActivityLogs_Devices", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_ActivityLogs_Devices", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("RecipeModel.FK_ActivityLogs_Devices", "Device", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_ActivityLogs_Locations", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_ActivityLogs_Locations", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_ActivityLogs_Locations", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_ActivityLogs_Locations", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("RecipeModel.FK_ActivityLogs_Locations", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_ActivityLogs_Tags", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_ActivityLogs_Tags", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_ActivityLogs_Tags", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_ActivityLogs_Tags", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("RecipeModel.FK_ActivityLogs_Tags", "Tag", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="AdministrativeValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdministrativeValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdministrativeValue object.
        /// </summary>
        /// <param name="administrativeValueID">Initial value of the AdministrativeValueID property.</param>
        /// <param name="propertyName">Initial value of the PropertyName property.</param>
        /// <param name="propertyValue">Initial value of the PropertyValue property.</param>
        public static AdministrativeValue CreateAdministrativeValue(global::System.Guid administrativeValueID, global::System.String propertyName, global::System.String propertyValue)
        {
            AdministrativeValue administrativeValue = new AdministrativeValue();
            administrativeValue.AdministrativeValueID = administrativeValueID;
            administrativeValue.PropertyName = propertyName;
            administrativeValue.PropertyValue = propertyValue;
            return administrativeValue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AdministrativeValueID
        {
            get
            {
                return _AdministrativeValueID;
            }
            set
            {
                if (_AdministrativeValueID != value)
                {
                    OnAdministrativeValueIDChanging(value);
                    ReportPropertyChanging("AdministrativeValueID");
                    _AdministrativeValueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdministrativeValueID");
                    OnAdministrativeValueIDChanged();
                }
            }
        }
        private global::System.Guid _AdministrativeValueID;
        partial void OnAdministrativeValueIDChanging(global::System.Guid value);
        partial void OnAdministrativeValueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyName
        {
            get
            {
                return _PropertyName;
            }
            set
            {
                OnPropertyNameChanging(value);
                ReportPropertyChanging("PropertyName");
                _PropertyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyName");
                OnPropertyNameChanged();
            }
        }
        private global::System.String _PropertyName;
        partial void OnPropertyNameChanging(global::System.String value);
        partial void OnPropertyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyValue
        {
            get
            {
                return _PropertyValue;
            }
            set
            {
                OnPropertyValueChanging(value);
                ReportPropertyChanging("PropertyValue");
                _PropertyValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyValue");
                OnPropertyValueChanged();
            }
        }
        private global::System.String _PropertyValue;
        partial void OnPropertyValueChanging(global::System.String value);
        partial void OnPropertyValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Category CreateCategory(global::System.Guid categoryID, global::System.String name, global::System.String description)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            category.Name = name;
            category.Description = description;
            return category;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Guid _CategoryID;
        partial void OnCategoryIDChanging(global::System.Guid value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Guid> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> StandardPriceID
        {
            get
            {
                return _StandardPriceID;
            }
            set
            {
                OnStandardPriceIDChanging(value);
                ReportPropertyChanging("StandardPriceID");
                _StandardPriceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardPriceID");
                OnStandardPriceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _StandardPriceID;
        partial void OnStandardPriceIDChanging(Nullable<global::System.Guid> value);
        partial void OnStandardPriceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> StandardNozzleID
        {
            get
            {
                return _StandardNozzleID;
            }
            set
            {
                OnStandardNozzleIDChanging(value);
                ReportPropertyChanging("StandardNozzleID");
                _StandardNozzleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardNozzleID");
                OnStandardNozzleIDChanged();
            }
        }
        private Nullable<global::System.Guid> _StandardNozzleID;
        partial void OnStandardNozzleIDChanging(Nullable<global::System.Guid> value);
        partial void OnStandardNozzleIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Ingredients_CategoryID", "Ingredient")]
        public EntityCollection<Ingredient> Ingredients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ingredient>("RecipeModel.FK_Ingredients_CategoryID", "Ingredient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ingredient>("RecipeModel.FK_Ingredients_CategoryID", "Ingredient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_SubCategories_SubCategory", "Category1")]
        public EntityCollection<Category> Categories1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("RecipeModel.FK_SubCategories_SubCategory", "Category1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("RecipeModel.FK_SubCategories_SubCategory", "Category1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_SubCategories_SubCategory", "Category")]
        public Category Category1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("RecipeModel.FK_SubCategories_SubCategory", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("RecipeModel.FK_SubCategories_SubCategory", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> Category1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("RecipeModel.FK_SubCategories_SubCategory", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("RecipeModel.FK_SubCategories_SubCategory", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UPCs_SubCategory", "UPC")]
        public EntityCollection<UPC> UPCs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UPC>("RecipeModel.FK_UPCs_SubCategory", "UPC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UPC>("RecipeModel.FK_UPCs_SubCategory", "UPC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Categories_StandardNozzles", "StandardNozzle")]
        public StandardNozzle StandardNozzle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardNozzle>("RecipeModel.FK_Categories_StandardNozzles", "StandardNozzle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardNozzle>("RecipeModel.FK_Categories_StandardNozzles", "StandardNozzle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StandardNozzle> StandardNozzleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardNozzle>("RecipeModel.FK_Categories_StandardNozzles", "StandardNozzle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StandardNozzle>("RecipeModel.FK_Categories_StandardNozzles", "StandardNozzle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Categories_StandardPricing", "StandardPrice")]
        public StandardPrice StandardPrice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardPrice>("RecipeModel.FK_Categories_StandardPricing", "StandardPrice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardPrice>("RecipeModel.FK_Categories_StandardPricing", "StandardPrice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StandardPrice> StandardPriceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardPrice>("RecipeModel.FK_Categories_StandardPricing", "StandardPrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StandardPrice>("RecipeModel.FK_Categories_StandardPricing", "StandardPrice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="DatabaseVersion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DatabaseVersion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DatabaseVersion object.
        /// </summary>
        /// <param name="databaseVersion1">Initial value of the DatabaseVersion1 property.</param>
        public static DatabaseVersion CreateDatabaseVersion(global::System.Int32 databaseVersion1)
        {
            DatabaseVersion databaseVersion = new DatabaseVersion();
            databaseVersion.DatabaseVersion1 = databaseVersion1;
            return databaseVersion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DatabaseVersion1
        {
            get
            {
                return _DatabaseVersion1;
            }
            set
            {
                if (_DatabaseVersion1 != value)
                {
                    OnDatabaseVersion1Changing(value);
                    ReportPropertyChanging("DatabaseVersion1");
                    _DatabaseVersion1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DatabaseVersion1");
                    OnDatabaseVersion1Changed();
                }
            }
        }
        private global::System.Int32 _DatabaseVersion1;
        partial void OnDatabaseVersion1Changing(global::System.Int32 value);
        partial void OnDatabaseVersion1Changed();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="Device")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Device : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Device object.
        /// </summary>
        /// <param name="deviceID">Initial value of the DeviceID property.</param>
        /// <param name="hardwareID">Initial value of the HardwareID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Device CreateDevice(global::System.Guid deviceID, global::System.String hardwareID, global::System.String name)
        {
            Device device = new Device();
            device.DeviceID = deviceID;
            device.HardwareID = hardwareID;
            device.Name = name;
            return device;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DeviceID
        {
            get
            {
                return _DeviceID;
            }
            set
            {
                if (_DeviceID != value)
                {
                    OnDeviceIDChanging(value);
                    ReportPropertyChanging("DeviceID");
                    _DeviceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeviceID");
                    OnDeviceIDChanged();
                }
            }
        }
        private global::System.Guid _DeviceID;
        partial void OnDeviceIDChanging(global::System.Guid value);
        partial void OnDeviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HardwareID
        {
            get
            {
                return _HardwareID;
            }
            set
            {
                OnHardwareIDChanging(value);
                ReportPropertyChanging("HardwareID");
                _HardwareID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HardwareID");
                OnHardwareIDChanged();
            }
        }
        private global::System.String _HardwareID;
        partial void OnHardwareIDChanging(global::System.String value);
        partial void OnHardwareIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Settings
        {
            get
            {
                return _Settings;
            }
            set
            {
                OnSettingsChanging(value);
                ReportPropertyChanging("Settings");
                _Settings = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Settings");
                OnSettingsChanged();
            }
        }
        private global::System.String _Settings;
        partial void OnSettingsChanging(global::System.String value);
        partial void OnSettingsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_ActivityLogs_Devices", "ActivityLog")]
        public EntityCollection<ActivityLog> ActivityLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityLog>("RecipeModel.FK_ActivityLogs_Devices", "ActivityLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityLog>("RecipeModel.FK_ActivityLogs_Devices", "ActivityLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_DeviceAlerts_Devices", "DeviceAlert")]
        public EntityCollection<DeviceAlert> DeviceAlerts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeviceAlert>("RecipeModel.FK_DeviceAlerts_Devices", "DeviceAlert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeviceAlert>("RecipeModel.FK_DeviceAlerts_Devices", "DeviceAlert", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Locations_Devices", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("RecipeModel.FK_Locations_Devices", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("RecipeModel.FK_Locations_Devices", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TagActivities_Devices", "TagActivity")]
        public EntityCollection<TagActivity> TagActivities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagActivity>("RecipeModel.FK_TagActivities_Devices", "TagActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagActivity>("RecipeModel.FK_TagActivities_Devices", "TagActivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TagMoves_Devices", "TagMove")]
        public EntityCollection<TagMove> TagMoves
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagMove>("RecipeModel.FK_TagMoves_Devices", "TagMove");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagMove>("RecipeModel.FK_TagMoves_Devices", "TagMove", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Pours_Devices", "Pour")]
        public EntityCollection<Pour> Pours
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pour>("RecipeModel.FK_Pours_Devices", "Pour");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pour>("RecipeModel.FK_Pours_Devices", "Pour", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="DeviceAlert")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeviceAlert : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeviceAlert object.
        /// </summary>
        /// <param name="deviceAlertID">Initial value of the DeviceAlertID property.</param>
        /// <param name="deviceID">Initial value of the DeviceID property.</param>
        /// <param name="alertType">Initial value of the AlertType property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="alertTime">Initial value of the AlertTime property.</param>
        public static DeviceAlert CreateDeviceAlert(global::System.Guid deviceAlertID, global::System.Guid deviceID, global::System.Int32 alertType, global::System.String message, global::System.DateTime alertTime)
        {
            DeviceAlert deviceAlert = new DeviceAlert();
            deviceAlert.DeviceAlertID = deviceAlertID;
            deviceAlert.DeviceID = deviceID;
            deviceAlert.AlertType = alertType;
            deviceAlert.Message = message;
            deviceAlert.AlertTime = alertTime;
            return deviceAlert;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DeviceAlertID
        {
            get
            {
                return _DeviceAlertID;
            }
            set
            {
                if (_DeviceAlertID != value)
                {
                    OnDeviceAlertIDChanging(value);
                    ReportPropertyChanging("DeviceAlertID");
                    _DeviceAlertID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeviceAlertID");
                    OnDeviceAlertIDChanged();
                }
            }
        }
        private global::System.Guid _DeviceAlertID;
        partial void OnDeviceAlertIDChanging(global::System.Guid value);
        partial void OnDeviceAlertIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DeviceID
        {
            get
            {
                return _DeviceID;
            }
            set
            {
                OnDeviceIDChanging(value);
                ReportPropertyChanging("DeviceID");
                _DeviceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceID");
                OnDeviceIDChanged();
            }
        }
        private global::System.Guid _DeviceID;
        partial void OnDeviceIDChanging(global::System.Guid value);
        partial void OnDeviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlertType
        {
            get
            {
                return _AlertType;
            }
            set
            {
                OnAlertTypeChanging(value);
                ReportPropertyChanging("AlertType");
                _AlertType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertType");
                OnAlertTypeChanged();
            }
        }
        private global::System.Int32 _AlertType;
        partial void OnAlertTypeChanging(global::System.Int32 value);
        partial void OnAlertTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AlertTime
        {
            get
            {
                return _AlertTime;
            }
            set
            {
                OnAlertTimeChanging(value);
                ReportPropertyChanging("AlertTime");
                _AlertTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertTime");
                OnAlertTimeChanged();
            }
        }
        private global::System.DateTime _AlertTime;
        partial void OnAlertTimeChanging(global::System.DateTime value);
        partial void OnAlertTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_DeviceAlerts_Devices", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_DeviceAlerts_Devices", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_DeviceAlerts_Devices", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_DeviceAlerts_Devices", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("RecipeModel.FK_DeviceAlerts_Devices", "Device", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Group CreateGroup(global::System.Guid groupID, global::System.String name)
        {
            Group group = new Group();
            group.GroupID = groupID;
            group.Name = name;
            return group;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                if (_GroupID != value)
                {
                    OnGroupIDChanging(value);
                    ReportPropertyChanging("GroupID");
                    _GroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupID");
                    OnGroupIDChanged();
                }
            }
        }
        private global::System.Guid _GroupID;
        partial void OnGroupIDChanging(global::System.Guid value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_GroupsXSecurableItems_Groups", "GroupsXSecurableItem")]
        public EntityCollection<GroupsXSecurableItem> GroupsXSecurableItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupsXSecurableItem>("RecipeModel.FK_GroupsXSecurableItems_Groups", "GroupsXSecurableItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupsXSecurableItem>("RecipeModel.FK_GroupsXSecurableItems_Groups", "GroupsXSecurableItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_GroupXReport_Groups", "GroupXReport")]
        public EntityCollection<GroupXReport> GroupXReports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupXReport>("RecipeModel.FK_GroupXReport_Groups", "GroupXReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupXReport>("RecipeModel.FK_GroupXReport_Groups", "GroupXReport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "UsersXGroups", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("RecipeModel.UsersXGroups", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("RecipeModel.UsersXGroups", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="GroupsXSecurableItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupsXSecurableItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupsXSecurableItem object.
        /// </summary>
        /// <param name="groupSecurableItemID">Initial value of the GroupSecurableItemID property.</param>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        /// <param name="securableItemID">Initial value of the SecurableItemID property.</param>
        public static GroupsXSecurableItem CreateGroupsXSecurableItem(global::System.Guid groupSecurableItemID, global::System.Guid groupID, global::System.Guid securableItemID)
        {
            GroupsXSecurableItem groupsXSecurableItem = new GroupsXSecurableItem();
            groupsXSecurableItem.GroupSecurableItemID = groupSecurableItemID;
            groupsXSecurableItem.GroupID = groupID;
            groupsXSecurableItem.SecurableItemID = securableItemID;
            return groupsXSecurableItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupSecurableItemID
        {
            get
            {
                return _GroupSecurableItemID;
            }
            set
            {
                if (_GroupSecurableItemID != value)
                {
                    OnGroupSecurableItemIDChanging(value);
                    ReportPropertyChanging("GroupSecurableItemID");
                    _GroupSecurableItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupSecurableItemID");
                    OnGroupSecurableItemIDChanged();
                }
            }
        }
        private global::System.Guid _GroupSecurableItemID;
        partial void OnGroupSecurableItemIDChanging(global::System.Guid value);
        partial void OnGroupSecurableItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                OnGroupIDChanging(value);
                ReportPropertyChanging("GroupID");
                _GroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupID");
                OnGroupIDChanged();
            }
        }
        private global::System.Guid _GroupID;
        partial void OnGroupIDChanging(global::System.Guid value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SecurableItemID
        {
            get
            {
                return _SecurableItemID;
            }
            set
            {
                OnSecurableItemIDChanging(value);
                ReportPropertyChanging("SecurableItemID");
                _SecurableItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurableItemID");
                OnSecurableItemIDChanged();
            }
        }
        private global::System.Guid _SecurableItemID;
        partial void OnSecurableItemIDChanging(global::System.Guid value);
        partial void OnSecurableItemIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_GroupsXSecurableItems_Groups", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("RecipeModel.FK_GroupsXSecurableItems_Groups", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("RecipeModel.FK_GroupsXSecurableItems_Groups", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("RecipeModel.FK_GroupsXSecurableItems_Groups", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("RecipeModel.FK_GroupsXSecurableItems_Groups", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_GroupsXSecurableItems_SecurableItems", "SecurableItem")]
        public SecurableItem SecurableItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurableItem>("RecipeModel.FK_GroupsXSecurableItems_SecurableItems", "SecurableItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurableItem>("RecipeModel.FK_GroupsXSecurableItems_SecurableItems", "SecurableItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurableItem> SecurableItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurableItem>("RecipeModel.FK_GroupsXSecurableItems_SecurableItems", "SecurableItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurableItem>("RecipeModel.FK_GroupsXSecurableItems_SecurableItems", "SecurableItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="GroupXReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupXReport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupXReport object.
        /// </summary>
        /// <param name="groupXReportID">Initial value of the GroupXReportID property.</param>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        /// <param name="reportID">Initial value of the ReportID property.</param>
        public static GroupXReport CreateGroupXReport(global::System.Guid groupXReportID, global::System.Guid groupID, global::System.Guid reportID)
        {
            GroupXReport groupXReport = new GroupXReport();
            groupXReport.GroupXReportID = groupXReportID;
            groupXReport.GroupID = groupID;
            groupXReport.ReportID = reportID;
            return groupXReport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupXReportID
        {
            get
            {
                return _GroupXReportID;
            }
            set
            {
                if (_GroupXReportID != value)
                {
                    OnGroupXReportIDChanging(value);
                    ReportPropertyChanging("GroupXReportID");
                    _GroupXReportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupXReportID");
                    OnGroupXReportIDChanged();
                }
            }
        }
        private global::System.Guid _GroupXReportID;
        partial void OnGroupXReportIDChanging(global::System.Guid value);
        partial void OnGroupXReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                OnGroupIDChanging(value);
                ReportPropertyChanging("GroupID");
                _GroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupID");
                OnGroupIDChanged();
            }
        }
        private global::System.Guid _GroupID;
        partial void OnGroupIDChanging(global::System.Guid value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                OnReportIDChanging(value);
                ReportPropertyChanging("ReportID");
                _ReportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportID");
                OnReportIDChanged();
            }
        }
        private global::System.Guid _ReportID;
        partial void OnReportIDChanging(global::System.Guid value);
        partial void OnReportIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_GroupXReport_Groups", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("RecipeModel.FK_GroupXReport_Groups", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("RecipeModel.FK_GroupXReport_Groups", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("RecipeModel.FK_GroupXReport_Groups", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("RecipeModel.FK_GroupXReport_Groups", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_GroupXReport_Reports", "Report")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("RecipeModel.FK_GroupXReport_Reports", "Report").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("RecipeModel.FK_GroupXReport_Reports", "Report").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("RecipeModel.FK_GroupXReport_Reports", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("RecipeModel.FK_GroupXReport_Reports", "Report", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="Ingredient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ingredient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ingredient object.
        /// </summary>
        /// <param name="ingredientID">Initial value of the IngredientID property.</param>
        /// <param name="recipeID">Initial value of the RecipeID property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="standardPourID">Initial value of the StandardPourID property.</param>
        public static Ingredient CreateIngredient(global::System.Guid ingredientID, global::System.Guid recipeID, global::System.Int32 number, global::System.Int32 type, global::System.Guid standardPourID)
        {
            Ingredient ingredient = new Ingredient();
            ingredient.IngredientID = ingredientID;
            ingredient.RecipeID = recipeID;
            ingredient.Number = number;
            ingredient.Type = type;
            ingredient.StandardPourID = standardPourID;
            return ingredient;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IngredientID
        {
            get
            {
                return _IngredientID;
            }
            set
            {
                if (_IngredientID != value)
                {
                    OnIngredientIDChanging(value);
                    ReportPropertyChanging("IngredientID");
                    _IngredientID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IngredientID");
                    OnIngredientIDChanged();
                }
            }
        }
        private global::System.Guid _IngredientID;
        partial void OnIngredientIDChanging(global::System.Guid value);
        partial void OnIngredientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RecipeID
        {
            get
            {
                return _RecipeID;
            }
            set
            {
                OnRecipeIDChanging(value);
                ReportPropertyChanging("RecipeID");
                _RecipeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecipeID");
                OnRecipeIDChanged();
            }
        }
        private global::System.Guid _RecipeID;
        partial void OnRecipeIDChanging(global::System.Guid value);
        partial void OnRecipeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UPCID
        {
            get
            {
                return _UPCID;
            }
            set
            {
                OnUPCIDChanging(value);
                ReportPropertyChanging("UPCID");
                _UPCID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UPCID");
                OnUPCIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UPCID;
        partial void OnUPCIDChanging(Nullable<global::System.Guid> value);
        partial void OnUPCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quality
        {
            get
            {
                return _Quality;
            }
            set
            {
                OnQualityChanging(value);
                ReportPropertyChanging("Quality");
                _Quality = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quality");
                OnQualityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quality;
        partial void OnQualityChanging(Nullable<global::System.Int32> value);
        partial void OnQualityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid StandardPourID
        {
            get
            {
                return _StandardPourID;
            }
            set
            {
                OnStandardPourIDChanging(value);
                ReportPropertyChanging("StandardPourID");
                _StandardPourID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardPourID");
                OnStandardPourIDChanged();
            }
        }
        private global::System.Guid _StandardPourID;
        partial void OnStandardPourIDChanging(global::System.Guid value);
        partial void OnStandardPourIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ManufacturerID
        {
            get
            {
                return _ManufacturerID;
            }
            set
            {
                OnManufacturerIDChanging(value);
                ReportPropertyChanging("ManufacturerID");
                _ManufacturerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManufacturerID");
                OnManufacturerIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ManufacturerID;
        partial void OnManufacturerIDChanging(Nullable<global::System.Guid> value);
        partial void OnManufacturerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Guid> value);
        partial void OnCategoryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Ingredients_CategoryID", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("RecipeModel.FK_Ingredients_CategoryID", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("RecipeModel.FK_Ingredients_CategoryID", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("RecipeModel.FK_Ingredients_CategoryID", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("RecipeModel.FK_Ingredients_CategoryID", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Ingredients_ManufacturerID", "Manufacturer")]
        public Manufacturer Manufacturer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("RecipeModel.FK_Ingredients_ManufacturerID", "Manufacturer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("RecipeModel.FK_Ingredients_ManufacturerID", "Manufacturer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Manufacturer> ManufacturerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("RecipeModel.FK_Ingredients_ManufacturerID", "Manufacturer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Manufacturer>("RecipeModel.FK_Ingredients_ManufacturerID", "Manufacturer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Ingredients_Recipe", "Recipe")]
        public Recipe Recipe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("RecipeModel.FK_Ingredients_Recipe", "Recipe").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("RecipeModel.FK_Ingredients_Recipe", "Recipe").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recipe> RecipeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("RecipeModel.FK_Ingredients_Recipe", "Recipe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recipe>("RecipeModel.FK_Ingredients_Recipe", "Recipe", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Ingredients_StandardPour", "StandardPour")]
        public StandardPour StandardPour
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardPour>("RecipeModel.FK_Ingredients_StandardPour", "StandardPour").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardPour>("RecipeModel.FK_Ingredients_StandardPour", "StandardPour").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StandardPour> StandardPourReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardPour>("RecipeModel.FK_Ingredients_StandardPour", "StandardPour");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StandardPour>("RecipeModel.FK_Ingredients_StandardPour", "StandardPour", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Ingredients_UPCID", "UPC")]
        public UPC UPC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UPC>("RecipeModel.FK_Ingredients_UPCID", "UPC").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UPC>("RecipeModel.FK_Ingredients_UPCID", "UPC").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UPC> UPCReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UPC>("RecipeModel.FK_Ingredients_UPCID", "UPC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UPC>("RecipeModel.FK_Ingredients_UPCID", "UPC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Pours_Ingredients", "Pour")]
        public EntityCollection<Pour> Pours
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pour>("RecipeModel.FK_Pours_Ingredients", "Pour");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pour>("RecipeModel.FK_Pours_Ingredients", "Pour", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="Inventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Inventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Inventory object.
        /// </summary>
        /// <param name="inventoryID">Initial value of the InventoryID property.</param>
        /// <param name="uPCID">Initial value of the UPCID property.</param>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="enterDate">Initial value of the EnterDate property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static Inventory CreateInventory(global::System.Guid inventoryID, global::System.Guid uPCID, global::System.Guid locationID, global::System.Decimal cost, global::System.DateTime enterDate, global::System.Double amount)
        {
            Inventory inventory = new Inventory();
            inventory.InventoryID = inventoryID;
            inventory.UPCID = uPCID;
            inventory.LocationID = locationID;
            inventory.Cost = cost;
            inventory.EnterDate = enterDate;
            inventory.Amount = amount;
            return inventory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InventoryID
        {
            get
            {
                return _InventoryID;
            }
            set
            {
                if (_InventoryID != value)
                {
                    OnInventoryIDChanging(value);
                    ReportPropertyChanging("InventoryID");
                    _InventoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InventoryID");
                    OnInventoryIDChanged();
                }
            }
        }
        private global::System.Guid _InventoryID;
        partial void OnInventoryIDChanging(global::System.Guid value);
        partial void OnInventoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UPCID
        {
            get
            {
                return _UPCID;
            }
            set
            {
                OnUPCIDChanging(value);
                ReportPropertyChanging("UPCID");
                _UPCID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UPCID");
                OnUPCIDChanged();
            }
        }
        private global::System.Guid _UPCID;
        partial void OnUPCIDChanging(global::System.Guid value);
        partial void OnUPCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private global::System.Guid _LocationID;
        partial void OnLocationIDChanging(global::System.Guid value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EnterDate
        {
            get
            {
                return _EnterDate;
            }
            set
            {
                OnEnterDateChanging(value);
                ReportPropertyChanging("EnterDate");
                _EnterDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnterDate");
                OnEnterDateChanged();
            }
        }
        private global::System.DateTime _EnterDate;
        partial void OnEnterDateChanging(global::System.DateTime value);
        partial void OnEnterDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExitDate
        {
            get
            {
                return _ExitDate;
            }
            set
            {
                OnExitDateChanging(value);
                ReportPropertyChanging("ExitDate");
                _ExitDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExitDate");
                OnExitDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExitDate;
        partial void OnExitDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExitDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TagDate
        {
            get
            {
                return _TagDate;
            }
            set
            {
                OnTagDateChanging(value);
                ReportPropertyChanging("TagDate");
                _TagDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagDate");
                OnTagDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TagDate;
        partial void OnTagDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTagDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                OnTagIDChanging(value);
                ReportPropertyChanging("TagID");
                _TagID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagID");
                OnTagIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TagID;
        partial void OnTagIDChanging(Nullable<global::System.Guid> value);
        partial void OnTagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExitReason
        {
            get
            {
                return _ExitReason;
            }
            set
            {
                OnExitReasonChanging(value);
                ReportPropertyChanging("ExitReason");
                _ExitReason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExitReason");
                OnExitReasonChanged();
            }
        }
        private Nullable<global::System.Int32> _ExitReason;
        partial void OnExitReasonChanging(Nullable<global::System.Int32> value);
        partial void OnExitReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateTime
        {
            get
            {
                return _UpdateTime;
            }
            set
            {
                OnUpdateTimeChanging(value);
                ReportPropertyChanging("UpdateTime");
                _UpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateTime");
                OnUpdateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateTime;
        partial void OnUpdateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Inventories_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_Inventories_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_Inventories_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_Inventories_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("RecipeModel.FK_Inventories_Location", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Inventories_Tags", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_Inventories_Tags", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_Inventories_Tags", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_Inventories_Tags", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("RecipeModel.FK_Inventories_Tags", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Inventories_UPC", "UPC")]
        public UPC UPC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UPC>("RecipeModel.FK_Inventories_UPC", "UPC").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UPC>("RecipeModel.FK_Inventories_UPC", "UPC").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UPC> UPCReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UPC>("RecipeModel.FK_Inventories_UPC", "UPC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UPC>("RecipeModel.FK_Inventories_UPC", "UPC", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="allowHalfPour">Initial value of the AllowHalfPour property.</param>
        public static Location CreateLocation(global::System.Guid locationID, global::System.Guid organizationID, global::System.String name, global::System.String description, global::System.Boolean allowHalfPour)
        {
            Location location = new Location();
            location.LocationID = locationID;
            location.OrganizationID = organizationID;
            location.Name = name;
            location.Description = description;
            location.AllowHalfPour = allowHalfPour;
            return location;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                if (_LocationID != value)
                {
                    OnLocationIDChanging(value);
                    ReportPropertyChanging("LocationID");
                    _LocationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationID");
                    OnLocationIDChanged();
                }
            }
        }
        private global::System.Guid _LocationID;
        partial void OnLocationIDChanging(global::System.Guid value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Guid> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeviceID
        {
            get
            {
                return _DeviceID;
            }
            set
            {
                OnDeviceIDChanging(value);
                ReportPropertyChanging("DeviceID");
                _DeviceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceID");
                OnDeviceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _DeviceID;
        partial void OnDeviceIDChanging(Nullable<global::System.Guid> value);
        partial void OnDeviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowHalfPour
        {
            get
            {
                return _AllowHalfPour;
            }
            set
            {
                OnAllowHalfPourChanging(value);
                ReportPropertyChanging("AllowHalfPour");
                _AllowHalfPour = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowHalfPour");
                OnAllowHalfPourChanged();
            }
        }
        private global::System.Boolean _AllowHalfPour;
        partial void OnAllowHalfPourChanging(global::System.Boolean value);
        partial void OnAllowHalfPourChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String POSAlias
        {
            get
            {
                return _POSAlias;
            }
            set
            {
                OnPOSAliasChanging(value);
                ReportPropertyChanging("POSAlias");
                _POSAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("POSAlias");
                OnPOSAliasChanged();
            }
        }
        private global::System.String _POSAlias;
        partial void OnPOSAliasChanging(global::System.String value);
        partial void OnPOSAliasChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_ActivityLogs_Locations", "ActivityLog")]
        public EntityCollection<ActivityLog> ActivityLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityLog>("RecipeModel.FK_ActivityLogs_Locations", "ActivityLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityLog>("RecipeModel.FK_ActivityLogs_Locations", "ActivityLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Locations_Devices", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_Locations_Devices", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_Locations_Devices", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_Locations_Devices", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("RecipeModel.FK_Locations_Devices", "Device", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Inventories_Location", "Inventory")]
        public EntityCollection<Inventory> Inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inventory>("RecipeModel.FK_Inventories_Location", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inventory>("RecipeModel.FK_Inventories_Location", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Locations_Locations", "Location1")]
        public EntityCollection<Location> Locations1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("RecipeModel.FK_Locations_Locations", "Location1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("RecipeModel.FK_Locations_Locations", "Location1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Locations_Locations", "Location")]
        public Location Location1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_Locations_Locations", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_Locations_Locations", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> Location1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_Locations_Locations", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("RecipeModel.FK_Locations_Locations", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Locations_Organization", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("RecipeModel.FK_Locations_Organization", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("RecipeModel.FK_Locations_Organization", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("RecipeModel.FK_Locations_Organization", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("RecipeModel.FK_Locations_Organization", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_ParLevel_Location", "ParLevel")]
        public EntityCollection<ParLevel> ParLevels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParLevel>("RecipeModel.FK_ParLevel_Location", "ParLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParLevel>("RecipeModel.FK_ParLevel_Location", "ParLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_POSTickets_Locations", "POSTicket")]
        public EntityCollection<POSTicket> POSTickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<POSTicket>("RecipeModel.FK_POSTickets_Locations", "POSTicket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<POSTicket>("RecipeModel.FK_POSTickets_Locations", "POSTicket", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TagAlerts_Locations", "TagAlert")]
        public EntityCollection<TagAlert> TagAlerts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagAlert>("RecipeModel.FK_TagAlerts_Locations", "TagAlert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagAlert>("RecipeModel.FK_TagAlerts_Locations", "TagAlert", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TagMoves_Locations", "TagMove")]
        public EntityCollection<TagMove> TagMoves
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagMove>("RecipeModel.FK_TagMoves_Locations", "TagMove");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagMove>("RecipeModel.FK_TagMoves_Locations", "TagMove", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Tags_Locations", "Tag")]
        public EntityCollection<Tag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("RecipeModel.FK_Tags_Locations", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("RecipeModel.FK_Tags_Locations", "Tag", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="Manufacturer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Manufacturer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Manufacturer object.
        /// </summary>
        /// <param name="manufacturerID">Initial value of the ManufacturerID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Manufacturer CreateManufacturer(global::System.Guid manufacturerID, global::System.String name)
        {
            Manufacturer manufacturer = new Manufacturer();
            manufacturer.ManufacturerID = manufacturerID;
            manufacturer.Name = name;
            return manufacturer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ManufacturerID
        {
            get
            {
                return _ManufacturerID;
            }
            set
            {
                if (_ManufacturerID != value)
                {
                    OnManufacturerIDChanging(value);
                    ReportPropertyChanging("ManufacturerID");
                    _ManufacturerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ManufacturerID");
                    OnManufacturerIDChanged();
                }
            }
        }
        private global::System.Guid _ManufacturerID;
        partial void OnManufacturerIDChanging(global::System.Guid value);
        partial void OnManufacturerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Ingredients_ManufacturerID", "Ingredient")]
        public EntityCollection<Ingredient> Ingredients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ingredient>("RecipeModel.FK_Ingredients_ManufacturerID", "Ingredient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ingredient>("RecipeModel.FK_Ingredients_ManufacturerID", "Ingredient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UPCs_Manufacturers", "UPC")]
        public EntityCollection<UPC> UPCs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UPC>("RecipeModel.FK_UPCs_Manufacturers", "UPC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UPC>("RecipeModel.FK_UPCs_Manufacturers", "UPC", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="Move")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Move : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Move object.
        /// </summary>
        /// <param name="moveID">Initial value of the MoveID property.</param>
        /// <param name="moveTime">Initial value of the MoveTime property.</param>
        /// <param name="oldLocation">Initial value of the OldLocation property.</param>
        /// <param name="newLocation">Initial value of the NewLocation property.</param>
        /// <param name="quantitiy">Initial value of the Quantitiy property.</param>
        public static Move CreateMove(global::System.Guid moveID, global::System.DateTime moveTime, global::System.Guid oldLocation, global::System.Guid newLocation, global::System.Int32 quantitiy)
        {
            Move move = new Move();
            move.MoveID = moveID;
            move.MoveTime = moveTime;
            move.OldLocation = oldLocation;
            move.NewLocation = newLocation;
            move.Quantitiy = quantitiy;
            return move;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MoveID
        {
            get
            {
                return _MoveID;
            }
            set
            {
                if (_MoveID != value)
                {
                    OnMoveIDChanging(value);
                    ReportPropertyChanging("MoveID");
                    _MoveID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MoveID");
                    OnMoveIDChanged();
                }
            }
        }
        private global::System.Guid _MoveID;
        partial void OnMoveIDChanging(global::System.Guid value);
        partial void OnMoveIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MoveTime
        {
            get
            {
                return _MoveTime;
            }
            set
            {
                OnMoveTimeChanging(value);
                ReportPropertyChanging("MoveTime");
                _MoveTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MoveTime");
                OnMoveTimeChanged();
            }
        }
        private global::System.DateTime _MoveTime;
        partial void OnMoveTimeChanging(global::System.DateTime value);
        partial void OnMoveTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OldLocation
        {
            get
            {
                return _OldLocation;
            }
            set
            {
                OnOldLocationChanging(value);
                ReportPropertyChanging("OldLocation");
                _OldLocation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OldLocation");
                OnOldLocationChanged();
            }
        }
        private global::System.Guid _OldLocation;
        partial void OnOldLocationChanging(global::System.Guid value);
        partial void OnOldLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NewLocation
        {
            get
            {
                return _NewLocation;
            }
            set
            {
                OnNewLocationChanging(value);
                ReportPropertyChanging("NewLocation");
                _NewLocation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewLocation");
                OnNewLocationChanged();
            }
        }
        private global::System.Guid _NewLocation;
        partial void OnNewLocationChanging(global::System.Guid value);
        partial void OnNewLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                OnTagIDChanging(value);
                ReportPropertyChanging("TagID");
                _TagID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagID");
                OnTagIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TagID;
        partial void OnTagIDChanging(Nullable<global::System.Guid> value);
        partial void OnTagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> InventoryID
        {
            get
            {
                return _InventoryID;
            }
            set
            {
                OnInventoryIDChanging(value);
                ReportPropertyChanging("InventoryID");
                _InventoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryID");
                OnInventoryIDChanged();
            }
        }
        private Nullable<global::System.Guid> _InventoryID;
        partial void OnInventoryIDChanging(Nullable<global::System.Guid> value);
        partial void OnInventoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantitiy
        {
            get
            {
                return _Quantitiy;
            }
            set
            {
                OnQuantitiyChanging(value);
                ReportPropertyChanging("Quantitiy");
                _Quantitiy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantitiy");
                OnQuantitiyChanged();
            }
        }
        private global::System.Int32 _Quantitiy;
        partial void OnQuantitiyChanging(global::System.Int32 value);
        partial void OnQuantitiyChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="Organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organization object.
        /// </summary>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Organization CreateOrganization(global::System.Guid organizationID, global::System.String name)
        {
            Organization organization = new Organization();
            organization.OrganizationID = organizationID;
            organization.Name = name;
            return organization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                if (_OrganizationID != value)
                {
                    OnOrganizationIDChanging(value);
                    ReportPropertyChanging("OrganizationID");
                    _OrganizationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrganizationID");
                    OnOrganizationIDChanged();
                }
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Locations_Organization", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("RecipeModel.FK_Locations_Organization", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("RecipeModel.FK_Locations_Organization", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UsersXOrganizations_Organization", "UsersXOrganization")]
        public EntityCollection<UsersXOrganization> UsersXOrganizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersXOrganization>("RecipeModel.FK_UsersXOrganizations_Organization", "UsersXOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersXOrganization>("RecipeModel.FK_UsersXOrganizations_Organization", "UsersXOrganization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="ParLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParLevel object.
        /// </summary>
        /// <param name="parLevelID">Initial value of the ParLevelID property.</param>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="uPCID">Initial value of the UPCID property.</param>
        /// <param name="bottleCount">Initial value of the BottleCount property.</param>
        public static ParLevel CreateParLevel(global::System.Guid parLevelID, global::System.Guid locationID, global::System.Guid uPCID, global::System.Double bottleCount)
        {
            ParLevel parLevel = new ParLevel();
            parLevel.ParLevelID = parLevelID;
            parLevel.LocationID = locationID;
            parLevel.UPCID = uPCID;
            parLevel.BottleCount = bottleCount;
            return parLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ParLevelID
        {
            get
            {
                return _ParLevelID;
            }
            set
            {
                if (_ParLevelID != value)
                {
                    OnParLevelIDChanging(value);
                    ReportPropertyChanging("ParLevelID");
                    _ParLevelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParLevelID");
                    OnParLevelIDChanged();
                }
            }
        }
        private global::System.Guid _ParLevelID;
        partial void OnParLevelIDChanging(global::System.Guid value);
        partial void OnParLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private global::System.Guid _LocationID;
        partial void OnLocationIDChanging(global::System.Guid value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UPCID
        {
            get
            {
                return _UPCID;
            }
            set
            {
                OnUPCIDChanging(value);
                ReportPropertyChanging("UPCID");
                _UPCID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UPCID");
                OnUPCIDChanged();
            }
        }
        private global::System.Guid _UPCID;
        partial void OnUPCIDChanging(global::System.Guid value);
        partial void OnUPCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BottleCount
        {
            get
            {
                return _BottleCount;
            }
            set
            {
                OnBottleCountChanging(value);
                ReportPropertyChanging("BottleCount");
                _BottleCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BottleCount");
                OnBottleCountChanged();
            }
        }
        private global::System.Double _BottleCount;
        partial void OnBottleCountChanging(global::System.Double value);
        partial void OnBottleCountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_ParLevel_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_ParLevel_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_ParLevel_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_ParLevel_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("RecipeModel.FK_ParLevel_Location", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_ParLevel_UPC", "UPC")]
        public UPC UPC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UPC>("RecipeModel.FK_ParLevel_UPC", "UPC").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UPC>("RecipeModel.FK_ParLevel_UPC", "UPC").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UPC> UPCReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UPC>("RecipeModel.FK_ParLevel_UPC", "UPC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UPC>("RecipeModel.FK_ParLevel_UPC", "UPC", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="POSTicket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class POSTicket : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new POSTicket object.
        /// </summary>
        /// <param name="pOSTicketID">Initial value of the POSTicketID property.</param>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="checkNumber">Initial value of the CheckNumber property.</param>
        /// <param name="ticketDate">Initial value of the TicketDate property.</param>
        /// <param name="establishment">Initial value of the Establishment property.</param>
        /// <param name="guestCount">Initial value of the GuestCount property.</param>
        public static POSTicket CreatePOSTicket(global::System.Guid pOSTicketID, global::System.Guid locationID, global::System.String checkNumber, global::System.DateTime ticketDate, global::System.String establishment, global::System.Int32 guestCount)
        {
            POSTicket pOSTicket = new POSTicket();
            pOSTicket.POSTicketID = pOSTicketID;
            pOSTicket.LocationID = locationID;
            pOSTicket.CheckNumber = checkNumber;
            pOSTicket.TicketDate = ticketDate;
            pOSTicket.Establishment = establishment;
            pOSTicket.GuestCount = guestCount;
            return pOSTicket;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid POSTicketID
        {
            get
            {
                return _POSTicketID;
            }
            set
            {
                if (_POSTicketID != value)
                {
                    OnPOSTicketIDChanging(value);
                    ReportPropertyChanging("POSTicketID");
                    _POSTicketID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("POSTicketID");
                    OnPOSTicketIDChanged();
                }
            }
        }
        private global::System.Guid _POSTicketID;
        partial void OnPOSTicketIDChanging(global::System.Guid value);
        partial void OnPOSTicketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private global::System.Guid _LocationID;
        partial void OnLocationIDChanging(global::System.Guid value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CheckNumber
        {
            get
            {
                return _CheckNumber;
            }
            set
            {
                OnCheckNumberChanging(value);
                ReportPropertyChanging("CheckNumber");
                _CheckNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CheckNumber");
                OnCheckNumberChanged();
            }
        }
        private global::System.String _CheckNumber;
        partial void OnCheckNumberChanging(global::System.String value);
        partial void OnCheckNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TicketDate
        {
            get
            {
                return _TicketDate;
            }
            set
            {
                OnTicketDateChanging(value);
                ReportPropertyChanging("TicketDate");
                _TicketDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TicketDate");
                OnTicketDateChanged();
            }
        }
        private global::System.DateTime _TicketDate;
        partial void OnTicketDateChanging(global::System.DateTime value);
        partial void OnTicketDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Establishment
        {
            get
            {
                return _Establishment;
            }
            set
            {
                OnEstablishmentChanging(value);
                ReportPropertyChanging("Establishment");
                _Establishment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Establishment");
                OnEstablishmentChanged();
            }
        }
        private global::System.String _Establishment;
        partial void OnEstablishmentChanging(global::System.String value);
        partial void OnEstablishmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GuestCount
        {
            get
            {
                return _GuestCount;
            }
            set
            {
                OnGuestCountChanging(value);
                ReportPropertyChanging("GuestCount");
                _GuestCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GuestCount");
                OnGuestCountChanged();
            }
        }
        private global::System.Int32 _GuestCount;
        partial void OnGuestCountChanging(global::System.Int32 value);
        partial void OnGuestCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerTable
        {
            get
            {
                return _CustomerTable;
            }
            set
            {
                OnCustomerTableChanging(value);
                ReportPropertyChanging("CustomerTable");
                _CustomerTable = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerTable");
                OnCustomerTableChanged();
            }
        }
        private global::System.String _CustomerTable;
        partial void OnCustomerTableChanging(global::System.String value);
        partial void OnCustomerTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RawData
        {
            get
            {
                return _RawData;
            }
            set
            {
                OnRawDataChanging(value);
                ReportPropertyChanging("RawData");
                _RawData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RawData");
                OnRawDataChanged();
            }
        }
        private global::System.String _RawData;
        partial void OnRawDataChanging(global::System.String value);
        partial void OnRawDataChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_POSTickets_Locations", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_POSTickets_Locations", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_POSTickets_Locations", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_POSTickets_Locations", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("RecipeModel.FK_POSTickets_Locations", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_POSTicketItems_POSTickets", "POSTicketItem")]
        public EntityCollection<POSTicketItem> POSTicketItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<POSTicketItem>("RecipeModel.FK_POSTicketItems_POSTickets", "POSTicketItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<POSTicketItem>("RecipeModel.FK_POSTicketItems_POSTickets", "POSTicketItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="POSTicketItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class POSTicketItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new POSTicketItem object.
        /// </summary>
        /// <param name="pOSTicketItemID">Initial value of the POSTicketItemID property.</param>
        /// <param name="pOSTicketID">Initial value of the POSTicketID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="reconciled">Initial value of the Reconciled property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static POSTicketItem CreatePOSTicketItem(global::System.Guid pOSTicketItemID, global::System.Guid pOSTicketID, global::System.String description, global::System.Int32 reconciled, global::System.Int32 quantity, global::System.Int32 status)
        {
            POSTicketItem pOSTicketItem = new POSTicketItem();
            pOSTicketItem.POSTicketItemID = pOSTicketItemID;
            pOSTicketItem.POSTicketID = pOSTicketID;
            pOSTicketItem.Description = description;
            pOSTicketItem.Reconciled = reconciled;
            pOSTicketItem.Quantity = quantity;
            pOSTicketItem.Status = status;
            return pOSTicketItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid POSTicketItemID
        {
            get
            {
                return _POSTicketItemID;
            }
            set
            {
                if (_POSTicketItemID != value)
                {
                    OnPOSTicketItemIDChanging(value);
                    ReportPropertyChanging("POSTicketItemID");
                    _POSTicketItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("POSTicketItemID");
                    OnPOSTicketItemIDChanged();
                }
            }
        }
        private global::System.Guid _POSTicketItemID;
        partial void OnPOSTicketItemIDChanging(global::System.Guid value);
        partial void OnPOSTicketItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid POSTicketID
        {
            get
            {
                return _POSTicketID;
            }
            set
            {
                OnPOSTicketIDChanging(value);
                ReportPropertyChanging("POSTicketID");
                _POSTicketID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POSTicketID");
                OnPOSTicketIDChanged();
            }
        }
        private global::System.Guid _POSTicketID;
        partial void OnPOSTicketIDChanging(global::System.Guid value);
        partial void OnPOSTicketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reconciled
        {
            get
            {
                return _Reconciled;
            }
            set
            {
                OnReconciledChanging(value);
                ReportPropertyChanging("Reconciled");
                _Reconciled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reconciled");
                OnReconciledChanged();
            }
        }
        private global::System.Int32 _Reconciled;
        partial void OnReconciledChanging(global::System.Int32 value);
        partial void OnReconciledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_POSTicketItems_POSTickets", "POSTicket")]
        public POSTicket POSTicket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<POSTicket>("RecipeModel.FK_POSTicketItems_POSTickets", "POSTicket").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<POSTicket>("RecipeModel.FK_POSTicketItems_POSTickets", "POSTicket").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<POSTicket> POSTicketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<POSTicket>("RecipeModel.FK_POSTicketItems_POSTickets", "POSTicket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<POSTicket>("RecipeModel.FK_POSTicketItems_POSTickets", "POSTicket", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Pours_TicketItems", "Pour")]
        public EntityCollection<Pour> Pours
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pour>("RecipeModel.FK_Pours_TicketItems", "Pour");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pour>("RecipeModel.FK_Pours_TicketItems", "Pour", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="POSTicketItemModifier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class POSTicketItemModifier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new POSTicketItemModifier object.
        /// </summary>
        /// <param name="pOSTicketITemModifierID">Initial value of the POSTicketITemModifierID property.</param>
        /// <param name="pOSTicketItemID">Initial value of the POSTicketItemID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static POSTicketItemModifier CreatePOSTicketItemModifier(global::System.Guid pOSTicketITemModifierID, global::System.Guid pOSTicketItemID, global::System.String name)
        {
            POSTicketItemModifier pOSTicketItemModifier = new POSTicketItemModifier();
            pOSTicketItemModifier.POSTicketITemModifierID = pOSTicketITemModifierID;
            pOSTicketItemModifier.POSTicketItemID = pOSTicketItemID;
            pOSTicketItemModifier.Name = name;
            return pOSTicketItemModifier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid POSTicketITemModifierID
        {
            get
            {
                return _POSTicketITemModifierID;
            }
            set
            {
                if (_POSTicketITemModifierID != value)
                {
                    OnPOSTicketITemModifierIDChanging(value);
                    ReportPropertyChanging("POSTicketITemModifierID");
                    _POSTicketITemModifierID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("POSTicketITemModifierID");
                    OnPOSTicketITemModifierIDChanged();
                }
            }
        }
        private global::System.Guid _POSTicketITemModifierID;
        partial void OnPOSTicketITemModifierIDChanging(global::System.Guid value);
        partial void OnPOSTicketITemModifierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid POSTicketItemID
        {
            get
            {
                return _POSTicketItemID;
            }
            set
            {
                OnPOSTicketItemIDChanging(value);
                ReportPropertyChanging("POSTicketItemID");
                _POSTicketItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POSTicketItemID");
                OnPOSTicketItemIDChanged();
            }
        }
        private global::System.Guid _POSTicketItemID;
        partial void OnPOSTicketItemIDChanging(global::System.Guid value);
        partial void OnPOSTicketItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="Pour")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pour : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pour object.
        /// </summary>
        /// <param name="pourID">Initial value of the PourID property.</param>
        /// <param name="tagID">Initial value of the TagID property.</param>
        /// <param name="deviceID">Initial value of the DeviceID property.</param>
        /// <param name="volume">Initial value of the Volume property.</param>
        /// <param name="pourTime">Initial value of the PourTime property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="amountLeft">Initial value of the AmountLeft property.</param>
        /// <param name="temperature">Initial value of the Temperature property.</param>
        /// <param name="batteryVoltage">Initial value of the BatteryVoltage property.</param>
        /// <param name="uPCID">Initial value of the UPCID property.</param>
        /// <param name="alerted">Initial value of the Alerted property.</param>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        public static Pour CreatePour(global::System.Guid pourID, global::System.Guid tagID, global::System.Guid deviceID, global::System.Double volume, global::System.DateTime pourTime, global::System.Double duration, global::System.Double amountLeft, global::System.Double temperature, global::System.Double batteryVoltage, global::System.Guid uPCID, global::System.Boolean alerted, global::System.Guid locationID)
        {
            Pour pour = new Pour();
            pour.PourID = pourID;
            pour.TagID = tagID;
            pour.DeviceID = deviceID;
            pour.Volume = volume;
            pour.PourTime = pourTime;
            pour.Duration = duration;
            pour.AmountLeft = amountLeft;
            pour.Temperature = temperature;
            pour.BatteryVoltage = batteryVoltage;
            pour.UPCID = uPCID;
            pour.Alerted = alerted;
            pour.LocationID = locationID;
            return pour;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PourID
        {
            get
            {
                return _PourID;
            }
            set
            {
                if (_PourID != value)
                {
                    OnPourIDChanging(value);
                    ReportPropertyChanging("PourID");
                    _PourID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PourID");
                    OnPourIDChanged();
                }
            }
        }
        private global::System.Guid _PourID;
        partial void OnPourIDChanging(global::System.Guid value);
        partial void OnPourIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                OnTagIDChanging(value);
                ReportPropertyChanging("TagID");
                _TagID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagID");
                OnTagIDChanged();
            }
        }
        private global::System.Guid _TagID;
        partial void OnTagIDChanging(global::System.Guid value);
        partial void OnTagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DeviceID
        {
            get
            {
                return _DeviceID;
            }
            set
            {
                OnDeviceIDChanging(value);
                ReportPropertyChanging("DeviceID");
                _DeviceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceID");
                OnDeviceIDChanged();
            }
        }
        private global::System.Guid _DeviceID;
        partial void OnDeviceIDChanging(global::System.Guid value);
        partial void OnDeviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.Double _Volume;
        partial void OnVolumeChanging(global::System.Double value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PourTime
        {
            get
            {
                return _PourTime;
            }
            set
            {
                OnPourTimeChanging(value);
                ReportPropertyChanging("PourTime");
                _PourTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PourTime");
                OnPourTimeChanged();
            }
        }
        private global::System.DateTime _PourTime;
        partial void OnPourTimeChanging(global::System.DateTime value);
        partial void OnPourTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.Double _Duration;
        partial void OnDurationChanging(global::System.Double value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AmountLeft
        {
            get
            {
                return _AmountLeft;
            }
            set
            {
                OnAmountLeftChanging(value);
                ReportPropertyChanging("AmountLeft");
                _AmountLeft = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountLeft");
                OnAmountLeftChanged();
            }
        }
        private global::System.Double _AmountLeft;
        partial void OnAmountLeftChanging(global::System.Double value);
        partial void OnAmountLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Temperature
        {
            get
            {
                return _Temperature;
            }
            set
            {
                OnTemperatureChanging(value);
                ReportPropertyChanging("Temperature");
                _Temperature = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Temperature");
                OnTemperatureChanged();
            }
        }
        private global::System.Double _Temperature;
        partial void OnTemperatureChanging(global::System.Double value);
        partial void OnTemperatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RawData
        {
            get
            {
                return _RawData;
            }
            set
            {
                OnRawDataChanging(value);
                ReportPropertyChanging("RawData");
                _RawData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RawData");
                OnRawDataChanged();
            }
        }
        private global::System.String _RawData;
        partial void OnRawDataChanging(global::System.String value);
        partial void OnRawDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BatteryVoltage
        {
            get
            {
                return _BatteryVoltage;
            }
            set
            {
                OnBatteryVoltageChanging(value);
                ReportPropertyChanging("BatteryVoltage");
                _BatteryVoltage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatteryVoltage");
                OnBatteryVoltageChanged();
            }
        }
        private global::System.Double _BatteryVoltage;
        partial void OnBatteryVoltageChanging(global::System.Double value);
        partial void OnBatteryVoltageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UPCID
        {
            get
            {
                return _UPCID;
            }
            set
            {
                OnUPCIDChanging(value);
                ReportPropertyChanging("UPCID");
                _UPCID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UPCID");
                OnUPCIDChanged();
            }
        }
        private global::System.Guid _UPCID;
        partial void OnUPCIDChanging(global::System.Guid value);
        partial void OnUPCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> POSTicketItemID
        {
            get
            {
                return _POSTicketItemID;
            }
            set
            {
                OnPOSTicketItemIDChanging(value);
                ReportPropertyChanging("POSTicketItemID");
                _POSTicketItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POSTicketItemID");
                OnPOSTicketItemIDChanged();
            }
        }
        private Nullable<global::System.Guid> _POSTicketItemID;
        partial void OnPOSTicketItemIDChanging(Nullable<global::System.Guid> value);
        partial void OnPOSTicketItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Alerted
        {
            get
            {
                return _Alerted;
            }
            set
            {
                OnAlertedChanging(value);
                ReportPropertyChanging("Alerted");
                _Alerted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Alerted");
                OnAlertedChanged();
            }
        }
        private global::System.Boolean _Alerted;
        partial void OnAlertedChanging(global::System.Boolean value);
        partial void OnAlertedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private global::System.Guid _LocationID;
        partial void OnLocationIDChanging(global::System.Guid value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> IngredientID
        {
            get
            {
                return _IngredientID;
            }
            set
            {
                OnIngredientIDChanging(value);
                ReportPropertyChanging("IngredientID");
                _IngredientID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IngredientID");
                OnIngredientIDChanged();
            }
        }
        private Nullable<global::System.Guid> _IngredientID;
        partial void OnIngredientIDChanging(Nullable<global::System.Guid> value);
        partial void OnIngredientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Pours_Devices", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_Pours_Devices", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_Pours_Devices", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_Pours_Devices", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("RecipeModel.FK_Pours_Devices", "Device", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Pours_TicketItems", "POSTicketItem")]
        public POSTicketItem POSTicketItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<POSTicketItem>("RecipeModel.FK_Pours_TicketItems", "POSTicketItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<POSTicketItem>("RecipeModel.FK_Pours_TicketItems", "POSTicketItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<POSTicketItem> POSTicketItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<POSTicketItem>("RecipeModel.FK_Pours_TicketItems", "POSTicketItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<POSTicketItem>("RecipeModel.FK_Pours_TicketItems", "POSTicketItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Pours_Tags", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_Pours_Tags", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_Pours_Tags", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_Pours_Tags", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("RecipeModel.FK_Pours_Tags", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Pours_UPCs", "UPC")]
        public UPC UPC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UPC>("RecipeModel.FK_Pours_UPCs", "UPC").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UPC>("RecipeModel.FK_Pours_UPCs", "UPC").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UPC> UPCReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UPC>("RecipeModel.FK_Pours_UPCs", "UPC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UPC>("RecipeModel.FK_Pours_UPCs", "UPC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Pours_Ingredients", "Ingredient")]
        public Ingredient Ingredient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ingredient>("RecipeModel.FK_Pours_Ingredients", "Ingredient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ingredient>("RecipeModel.FK_Pours_Ingredients", "Ingredient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ingredient> IngredientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ingredient>("RecipeModel.FK_Pours_Ingredients", "Ingredient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ingredient>("RecipeModel.FK_Pours_Ingredients", "Ingredient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="Quality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Quality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Quality object.
        /// </summary>
        /// <param name="qualityID">Initial value of the QualityID property.</param>
        /// <param name="qualityLevel">Initial value of the QualityLevel property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Quality CreateQuality(global::System.Guid qualityID, global::System.Int32 qualityLevel, global::System.String name)
        {
            Quality quality = new Quality();
            quality.QualityID = qualityID;
            quality.QualityLevel = qualityLevel;
            quality.Name = name;
            return quality;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid QualityID
        {
            get
            {
                return _QualityID;
            }
            set
            {
                if (_QualityID != value)
                {
                    OnQualityIDChanging(value);
                    ReportPropertyChanging("QualityID");
                    _QualityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QualityID");
                    OnQualityIDChanged();
                }
            }
        }
        private global::System.Guid _QualityID;
        partial void OnQualityIDChanging(global::System.Guid value);
        partial void OnQualityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QualityLevel
        {
            get
            {
                return _QualityLevel;
            }
            set
            {
                OnQualityLevelChanging(value);
                ReportPropertyChanging("QualityLevel");
                _QualityLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QualityLevel");
                OnQualityLevelChanged();
            }
        }
        private global::System.Int32 _QualityLevel;
        partial void OnQualityLevelChanging(global::System.Int32 value);
        partial void OnQualityLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="Recipe")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Recipe : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Recipe object.
        /// </summary>
        /// <param name="recipeID">Initial value of the RecipeID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Recipe CreateRecipe(global::System.Guid recipeID, global::System.String description)
        {
            Recipe recipe = new Recipe();
            recipe.RecipeID = recipeID;
            recipe.Description = description;
            return recipe;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RecipeID
        {
            get
            {
                return _RecipeID;
            }
            set
            {
                if (_RecipeID != value)
                {
                    OnRecipeIDChanging(value);
                    ReportPropertyChanging("RecipeID");
                    _RecipeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecipeID");
                    OnRecipeIDChanged();
                }
            }
        }
        private global::System.Guid _RecipeID;
        partial void OnRecipeIDChanging(global::System.Guid value);
        partial void OnRecipeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Ingredients_Recipe", "Ingredient")]
        public EntityCollection<Ingredient> Ingredients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ingredient>("RecipeModel.FK_Ingredients_Recipe", "Ingredient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ingredient>("RecipeModel.FK_Ingredients_Recipe", "Ingredient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TicketItemAliases_Recipe", "TicketItemAlias")]
        public EntityCollection<TicketItemAlias> TicketItemAliases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TicketItemAlias>("RecipeModel.FK_TicketItemAliases_Recipe", "TicketItemAlias");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TicketItemAlias>("RecipeModel.FK_TicketItemAliases_Recipe", "TicketItemAlias", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="Report")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Report : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Report object.
        /// </summary>
        /// <param name="reportID">Initial value of the ReportID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="command">Initial value of the Command property.</param>
        /// <param name="dateBound">Initial value of the DateBound property.</param>
        public static Report CreateReport(global::System.Guid reportID, global::System.String name, global::System.String command, global::System.Boolean dateBound)
        {
            Report report = new Report();
            report.ReportID = reportID;
            report.Name = name;
            report.Command = command;
            report.DateBound = dateBound;
            return report;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                if (_ReportID != value)
                {
                    OnReportIDChanging(value);
                    ReportPropertyChanging("ReportID");
                    _ReportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportID");
                    OnReportIDChanged();
                }
            }
        }
        private global::System.Guid _ReportID;
        partial void OnReportIDChanging(global::System.Guid value);
        partial void OnReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Command
        {
            get
            {
                return _Command;
            }
            set
            {
                OnCommandChanging(value);
                ReportPropertyChanging("Command");
                _Command = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Command");
                OnCommandChanged();
            }
        }
        private global::System.String _Command;
        partial void OnCommandChanging(global::System.String value);
        partial void OnCommandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReportFile
        {
            get
            {
                return _ReportFile;
            }
            set
            {
                OnReportFileChanging(value);
                ReportPropertyChanging("ReportFile");
                _ReportFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReportFile");
                OnReportFileChanged();
            }
        }
        private global::System.String _ReportFile;
        partial void OnReportFileChanging(global::System.String value);
        partial void OnReportFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SavedLayout
        {
            get
            {
                return _SavedLayout;
            }
            set
            {
                OnSavedLayoutChanging(value);
                ReportPropertyChanging("SavedLayout");
                _SavedLayout = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SavedLayout");
                OnSavedLayoutChanged();
            }
        }
        private global::System.String _SavedLayout;
        partial void OnSavedLayoutChanging(global::System.String value);
        partial void OnSavedLayoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DateBound
        {
            get
            {
                return _DateBound;
            }
            set
            {
                OnDateBoundChanging(value);
                ReportPropertyChanging("DateBound");
                _DateBound = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateBound");
                OnDateBoundChanged();
            }
        }
        private global::System.Boolean _DateBound;
        partial void OnDateBoundChanging(global::System.Boolean value);
        partial void OnDateBoundChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_GroupXReport_Reports", "GroupXReport")]
        public EntityCollection<GroupXReport> GroupXReports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupXReport>("RecipeModel.FK_GroupXReport_Reports", "GroupXReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupXReport>("RecipeModel.FK_GroupXReport_Reports", "GroupXReport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_ReportParameters_Reports", "ReportParameter")]
        public EntityCollection<ReportParameter> ReportParameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportParameter>("RecipeModel.FK_ReportParameters_Reports", "ReportParameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportParameter>("RecipeModel.FK_ReportParameters_Reports", "ReportParameter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="ReportParameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportParameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportParameter object.
        /// </summary>
        /// <param name="reportParameterID">Initial value of the ReportParameterID property.</param>
        /// <param name="reportID">Initial value of the ReportID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dataType">Initial value of the DataType property.</param>
        /// <param name="sQLName">Initial value of the SQLName property.</param>
        /// <param name="defaultValue">Initial value of the DefaultValue property.</param>
        public static ReportParameter CreateReportParameter(global::System.Guid reportParameterID, global::System.Guid reportID, global::System.String name, global::System.String dataType, global::System.String sQLName, global::System.String defaultValue)
        {
            ReportParameter reportParameter = new ReportParameter();
            reportParameter.ReportParameterID = reportParameterID;
            reportParameter.ReportID = reportID;
            reportParameter.Name = name;
            reportParameter.DataType = dataType;
            reportParameter.SQLName = sQLName;
            reportParameter.DefaultValue = defaultValue;
            return reportParameter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportParameterID
        {
            get
            {
                return _ReportParameterID;
            }
            set
            {
                if (_ReportParameterID != value)
                {
                    OnReportParameterIDChanging(value);
                    ReportPropertyChanging("ReportParameterID");
                    _ReportParameterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportParameterID");
                    OnReportParameterIDChanged();
                }
            }
        }
        private global::System.Guid _ReportParameterID;
        partial void OnReportParameterIDChanging(global::System.Guid value);
        partial void OnReportParameterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                OnReportIDChanging(value);
                ReportPropertyChanging("ReportID");
                _ReportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportID");
                OnReportIDChanged();
            }
        }
        private global::System.Guid _ReportID;
        partial void OnReportIDChanging(global::System.Guid value);
        partial void OnReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataType
        {
            get
            {
                return _DataType;
            }
            set
            {
                OnDataTypeChanging(value);
                ReportPropertyChanging("DataType");
                _DataType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataType");
                OnDataTypeChanged();
            }
        }
        private global::System.String _DataType;
        partial void OnDataTypeChanging(global::System.String value);
        partial void OnDataTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SQLName
        {
            get
            {
                return _SQLName;
            }
            set
            {
                OnSQLNameChanging(value);
                ReportPropertyChanging("SQLName");
                _SQLName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SQLName");
                OnSQLNameChanged();
            }
        }
        private global::System.String _SQLName;
        partial void OnSQLNameChanging(global::System.String value);
        partial void OnSQLNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DefaultValue
        {
            get
            {
                return _DefaultValue;
            }
            set
            {
                OnDefaultValueChanging(value);
                ReportPropertyChanging("DefaultValue");
                _DefaultValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DefaultValue");
                OnDefaultValueChanged();
            }
        }
        private global::System.String _DefaultValue;
        partial void OnDefaultValueChanging(global::System.String value);
        partial void OnDefaultValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_ReportParameters_Reports", "Report")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("RecipeModel.FK_ReportParameters_Reports", "Report").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("RecipeModel.FK_ReportParameters_Reports", "Report").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("RecipeModel.FK_ReportParameters_Reports", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("RecipeModel.FK_ReportParameters_Reports", "Report", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="SecurableItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurableItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurableItem object.
        /// </summary>
        /// <param name="securableItemID">Initial value of the SecurableItemID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SecurableItem CreateSecurableItem(global::System.Guid securableItemID, global::System.String name)
        {
            SecurableItem securableItem = new SecurableItem();
            securableItem.SecurableItemID = securableItemID;
            securableItem.Name = name;
            return securableItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SecurableItemID
        {
            get
            {
                return _SecurableItemID;
            }
            set
            {
                if (_SecurableItemID != value)
                {
                    OnSecurableItemIDChanging(value);
                    ReportPropertyChanging("SecurableItemID");
                    _SecurableItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SecurableItemID");
                    OnSecurableItemIDChanged();
                }
            }
        }
        private global::System.Guid _SecurableItemID;
        partial void OnSecurableItemIDChanging(global::System.Guid value);
        partial void OnSecurableItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_GroupsXSecurableItems_SecurableItems", "GroupsXSecurableItem")]
        public EntityCollection<GroupsXSecurableItem> GroupsXSecurableItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupsXSecurableItem>("RecipeModel.FK_GroupsXSecurableItems_SecurableItems", "GroupsXSecurableItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupsXSecurableItem>("RecipeModel.FK_GroupsXSecurableItems_SecurableItems", "GroupsXSecurableItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="SizeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SizeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SizeType object.
        /// </summary>
        /// <param name="sizeTypeID">Initial value of the SizeTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="abbreviation">Initial value of the Abbreviation property.</param>
        /// <param name="conversionMultiplier">Initial value of the ConversionMultiplier property.</param>
        public static SizeType CreateSizeType(global::System.Guid sizeTypeID, global::System.String name, global::System.String abbreviation, global::System.Double conversionMultiplier)
        {
            SizeType sizeType = new SizeType();
            sizeType.SizeTypeID = sizeTypeID;
            sizeType.Name = name;
            sizeType.Abbreviation = abbreviation;
            sizeType.ConversionMultiplier = conversionMultiplier;
            return sizeType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SizeTypeID
        {
            get
            {
                return _SizeTypeID;
            }
            set
            {
                if (_SizeTypeID != value)
                {
                    OnSizeTypeIDChanging(value);
                    ReportPropertyChanging("SizeTypeID");
                    _SizeTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SizeTypeID");
                    OnSizeTypeIDChanged();
                }
            }
        }
        private global::System.Guid _SizeTypeID;
        partial void OnSizeTypeIDChanging(global::System.Guid value);
        partial void OnSizeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Abbreviation
        {
            get
            {
                return _Abbreviation;
            }
            set
            {
                OnAbbreviationChanging(value);
                ReportPropertyChanging("Abbreviation");
                _Abbreviation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Abbreviation");
                OnAbbreviationChanged();
            }
        }
        private global::System.String _Abbreviation;
        partial void OnAbbreviationChanging(global::System.String value);
        partial void OnAbbreviationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ConversionMultiplier
        {
            get
            {
                return _ConversionMultiplier;
            }
            set
            {
                OnConversionMultiplierChanging(value);
                ReportPropertyChanging("ConversionMultiplier");
                _ConversionMultiplier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConversionMultiplier");
                OnConversionMultiplierChanged();
            }
        }
        private global::System.Double _ConversionMultiplier;
        partial void OnConversionMultiplierChanging(global::System.Double value);
        partial void OnConversionMultiplierChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UPCs_SizeType", "UPC")]
        public EntityCollection<UPC> UPCs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UPC>("RecipeModel.FK_UPCs_SizeType", "UPC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UPC>("RecipeModel.FK_UPCs_SizeType", "UPC", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="StandardNozzle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StandardNozzle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StandardNozzle object.
        /// </summary>
        /// <param name="standardNozzleID">Initial value of the StandardNozzleID property.</param>
        /// <param name="length">Initial value of the Length property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="shape">Initial value of the Shape property.</param>
        public static StandardNozzle CreateStandardNozzle(global::System.Guid standardNozzleID, global::System.Double length, global::System.Double width, global::System.Int32 shape)
        {
            StandardNozzle standardNozzle = new StandardNozzle();
            standardNozzle.StandardNozzleID = standardNozzleID;
            standardNozzle.Length = length;
            standardNozzle.Width = width;
            standardNozzle.Shape = shape;
            return standardNozzle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid StandardNozzleID
        {
            get
            {
                return _StandardNozzleID;
            }
            set
            {
                if (_StandardNozzleID != value)
                {
                    OnStandardNozzleIDChanging(value);
                    ReportPropertyChanging("StandardNozzleID");
                    _StandardNozzleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StandardNozzleID");
                    OnStandardNozzleIDChanged();
                }
            }
        }
        private global::System.Guid _StandardNozzleID;
        partial void OnStandardNozzleIDChanging(global::System.Guid value);
        partial void OnStandardNozzleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private global::System.Double _Length;
        partial void OnLengthChanging(global::System.Double value);
        partial void OnLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private global::System.Double _Width;
        partial void OnWidthChanging(global::System.Double value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Shape
        {
            get
            {
                return _Shape;
            }
            set
            {
                OnShapeChanging(value);
                ReportPropertyChanging("Shape");
                _Shape = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shape");
                OnShapeChanged();
            }
        }
        private global::System.Int32 _Shape;
        partial void OnShapeChanging(global::System.Int32 value);
        partial void OnShapeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Categories_StandardNozzles", "Category")]
        public EntityCollection<Category> Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("RecipeModel.FK_Categories_StandardNozzles", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("RecipeModel.FK_Categories_StandardNozzles", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Tags_StandardNozzles", "Tag")]
        public EntityCollection<Tag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("RecipeModel.FK_Tags_StandardNozzles", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("RecipeModel.FK_Tags_StandardNozzles", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UPCs_StandardNozzles", "UPC")]
        public EntityCollection<UPC> UPCs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UPC>("RecipeModel.FK_UPCs_StandardNozzles", "UPC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UPC>("RecipeModel.FK_UPCs_StandardNozzles", "UPC", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="StandardPour")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StandardPour : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StandardPour object.
        /// </summary>
        /// <param name="standardPourID">Initial value of the StandardPourID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="pourStandard">Initial value of the PourStandard property.</param>
        /// <param name="standardVariance">Initial value of the StandardVariance property.</param>
        /// <param name="systemStandard">Initial value of the SystemStandard property.</param>
        public static StandardPour CreateStandardPour(global::System.Guid standardPourID, global::System.String name, global::System.Double pourStandard, global::System.Double standardVariance, global::System.Boolean systemStandard)
        {
            StandardPour standardPour = new StandardPour();
            standardPour.StandardPourID = standardPourID;
            standardPour.Name = name;
            standardPour.PourStandard = pourStandard;
            standardPour.StandardVariance = standardVariance;
            standardPour.SystemStandard = systemStandard;
            return standardPour;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid StandardPourID
        {
            get
            {
                return _StandardPourID;
            }
            set
            {
                if (_StandardPourID != value)
                {
                    OnStandardPourIDChanging(value);
                    ReportPropertyChanging("StandardPourID");
                    _StandardPourID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StandardPourID");
                    OnStandardPourIDChanged();
                }
            }
        }
        private global::System.Guid _StandardPourID;
        partial void OnStandardPourIDChanging(global::System.Guid value);
        partial void OnStandardPourIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PourStandard
        {
            get
            {
                return _PourStandard;
            }
            set
            {
                OnPourStandardChanging(value);
                ReportPropertyChanging("PourStandard");
                _PourStandard = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PourStandard");
                OnPourStandardChanged();
            }
        }
        private global::System.Double _PourStandard;
        partial void OnPourStandardChanging(global::System.Double value);
        partial void OnPourStandardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double StandardVariance
        {
            get
            {
                return _StandardVariance;
            }
            set
            {
                OnStandardVarianceChanging(value);
                ReportPropertyChanging("StandardVariance");
                _StandardVariance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardVariance");
                OnStandardVarianceChanged();
            }
        }
        private global::System.Double _StandardVariance;
        partial void OnStandardVarianceChanging(global::System.Double value);
        partial void OnStandardVarianceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Guid> value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SystemStandard
        {
            get
            {
                return _SystemStandard;
            }
            set
            {
                OnSystemStandardChanging(value);
                ReportPropertyChanging("SystemStandard");
                _SystemStandard = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SystemStandard");
                OnSystemStandardChanged();
            }
        }
        private global::System.Boolean _SystemStandard;
        partial void OnSystemStandardChanging(global::System.Boolean value);
        partial void OnSystemStandardChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Ingredients_StandardPour", "Ingredient")]
        public EntityCollection<Ingredient> Ingredients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ingredient>("RecipeModel.FK_Ingredients_StandardPour", "Ingredient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ingredient>("RecipeModel.FK_Ingredients_StandardPour", "Ingredient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="StandardPrice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StandardPrice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StandardPrice object.
        /// </summary>
        /// <param name="standardPriceID">Initial value of the StandardPriceID property.</param>
        /// <param name="singlePrice">Initial value of the SinglePrice property.</param>
        /// <param name="doublePrice">Initial value of the DoublePrice property.</param>
        public static StandardPrice CreateStandardPrice(global::System.Guid standardPriceID, global::System.Decimal singlePrice, global::System.Decimal doublePrice)
        {
            StandardPrice standardPrice = new StandardPrice();
            standardPrice.StandardPriceID = standardPriceID;
            standardPrice.SinglePrice = singlePrice;
            standardPrice.DoublePrice = doublePrice;
            return standardPrice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid StandardPriceID
        {
            get
            {
                return _StandardPriceID;
            }
            set
            {
                if (_StandardPriceID != value)
                {
                    OnStandardPriceIDChanging(value);
                    ReportPropertyChanging("StandardPriceID");
                    _StandardPriceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StandardPriceID");
                    OnStandardPriceIDChanged();
                }
            }
        }
        private global::System.Guid _StandardPriceID;
        partial void OnStandardPriceIDChanging(global::System.Guid value);
        partial void OnStandardPriceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SinglePrice
        {
            get
            {
                return _SinglePrice;
            }
            set
            {
                OnSinglePriceChanging(value);
                ReportPropertyChanging("SinglePrice");
                _SinglePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SinglePrice");
                OnSinglePriceChanged();
            }
        }
        private global::System.Decimal _SinglePrice;
        partial void OnSinglePriceChanging(global::System.Decimal value);
        partial void OnSinglePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DoublePrice
        {
            get
            {
                return _DoublePrice;
            }
            set
            {
                OnDoublePriceChanging(value);
                ReportPropertyChanging("DoublePrice");
                _DoublePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoublePrice");
                OnDoublePriceChanged();
            }
        }
        private global::System.Decimal _DoublePrice;
        partial void OnDoublePriceChanging(global::System.Decimal value);
        partial void OnDoublePriceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Categories_StandardPricing", "Category")]
        public EntityCollection<Category> Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("RecipeModel.FK_Categories_StandardPricing", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("RecipeModel.FK_Categories_StandardPricing", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UPCs_StandardPricing", "UPC")]
        public EntityCollection<UPC> UPCs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UPC>("RecipeModel.FK_UPCs_StandardPricing", "UPC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UPC>("RecipeModel.FK_UPCs_StandardPricing", "UPC", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="tagID">Initial value of the TagID property.</param>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="tagNumber">Initial value of the TagNumber property.</param>
        public static Tag CreateTag(global::System.Guid tagID, global::System.Guid locationID, global::System.String tagNumber)
        {
            Tag tag = new Tag();
            tag.TagID = tagID;
            tag.LocationID = locationID;
            tag.TagNumber = tagNumber;
            return tag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                if (_TagID != value)
                {
                    OnTagIDChanging(value);
                    ReportPropertyChanging("TagID");
                    _TagID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TagID");
                    OnTagIDChanged();
                }
            }
        }
        private global::System.Guid _TagID;
        partial void OnTagIDChanging(global::System.Guid value);
        partial void OnTagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private global::System.Guid _LocationID;
        partial void OnLocationIDChanging(global::System.Guid value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagNumber
        {
            get
            {
                return _TagNumber;
            }
            set
            {
                OnTagNumberChanging(value);
                ReportPropertyChanging("TagNumber");
                _TagNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TagNumber");
                OnTagNumberChanged();
            }
        }
        private global::System.String _TagNumber;
        partial void OnTagNumberChanging(global::System.String value);
        partial void OnTagNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RawData
        {
            get
            {
                return _RawData;
            }
            set
            {
                OnRawDataChanging(value);
                ReportPropertyChanging("RawData");
                _RawData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RawData");
                OnRawDataChanged();
            }
        }
        private global::System.String _RawData;
        partial void OnRawDataChanging(global::System.String value);
        partial void OnRawDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> StandardNozzleID
        {
            get
            {
                return _StandardNozzleID;
            }
            set
            {
                OnStandardNozzleIDChanging(value);
                ReportPropertyChanging("StandardNozzleID");
                _StandardNozzleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardNozzleID");
                OnStandardNozzleIDChanged();
            }
        }
        private Nullable<global::System.Guid> _StandardNozzleID;
        partial void OnStandardNozzleIDChanging(Nullable<global::System.Guid> value);
        partial void OnStandardNozzleIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_ActivityLogs_Tags", "ActivityLog")]
        public EntityCollection<ActivityLog> ActivityLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityLog>("RecipeModel.FK_ActivityLogs_Tags", "ActivityLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityLog>("RecipeModel.FK_ActivityLogs_Tags", "ActivityLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Inventories_Tags", "Inventory")]
        public EntityCollection<Inventory> Inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inventory>("RecipeModel.FK_Inventories_Tags", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inventory>("RecipeModel.FK_Inventories_Tags", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Tags_Locations", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_Tags_Locations", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_Tags_Locations", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_Tags_Locations", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("RecipeModel.FK_Tags_Locations", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Tags_StandardNozzles", "StandardNozzle")]
        public StandardNozzle StandardNozzle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardNozzle>("RecipeModel.FK_Tags_StandardNozzles", "StandardNozzle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardNozzle>("RecipeModel.FK_Tags_StandardNozzles", "StandardNozzle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StandardNozzle> StandardNozzleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardNozzle>("RecipeModel.FK_Tags_StandardNozzles", "StandardNozzle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StandardNozzle>("RecipeModel.FK_Tags_StandardNozzles", "StandardNozzle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TagActivities_Tags", "TagActivity")]
        public EntityCollection<TagActivity> TagActivities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagActivity>("RecipeModel.FK_TagActivities_Tags", "TagActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagActivity>("RecipeModel.FK_TagActivities_Tags", "TagActivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TagAlerts_Tags", "TagAlert")]
        public EntityCollection<TagAlert> TagAlerts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagAlert>("RecipeModel.FK_TagAlerts_Tags", "TagAlert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagAlert>("RecipeModel.FK_TagAlerts_Tags", "TagAlert", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TagMoves_Tags", "TagMove")]
        public EntityCollection<TagMove> TagMoves
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagMove>("RecipeModel.FK_TagMoves_Tags", "TagMove");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagMove>("RecipeModel.FK_TagMoves_Tags", "TagMove", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Pours_Tags", "Pour")]
        public EntityCollection<Pour> Pours
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pour>("RecipeModel.FK_Pours_Tags", "Pour");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pour>("RecipeModel.FK_Pours_Tags", "Pour", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="TagActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TagActivity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TagActivity object.
        /// </summary>
        /// <param name="tagActivityID">Initial value of the TagActivityID property.</param>
        /// <param name="tagID">Initial value of the TagID property.</param>
        /// <param name="deviceID">Initial value of the DeviceID property.</param>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="activityTime">Initial value of the ActivityTime property.</param>
        /// <param name="signalStrength">Initial value of the SignalStrength property.</param>
        /// <param name="activityType">Initial value of the ActivityType property.</param>
        public static TagActivity CreateTagActivity(global::System.Guid tagActivityID, global::System.Guid tagID, global::System.Guid deviceID, global::System.Guid locationID, global::System.DateTime activityTime, global::System.Double signalStrength, global::System.Int32 activityType)
        {
            TagActivity tagActivity = new TagActivity();
            tagActivity.TagActivityID = tagActivityID;
            tagActivity.TagID = tagID;
            tagActivity.DeviceID = deviceID;
            tagActivity.LocationID = locationID;
            tagActivity.ActivityTime = activityTime;
            tagActivity.SignalStrength = signalStrength;
            tagActivity.ActivityType = activityType;
            return tagActivity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TagActivityID
        {
            get
            {
                return _TagActivityID;
            }
            set
            {
                if (_TagActivityID != value)
                {
                    OnTagActivityIDChanging(value);
                    ReportPropertyChanging("TagActivityID");
                    _TagActivityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TagActivityID");
                    OnTagActivityIDChanged();
                }
            }
        }
        private global::System.Guid _TagActivityID;
        partial void OnTagActivityIDChanging(global::System.Guid value);
        partial void OnTagActivityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                OnTagIDChanging(value);
                ReportPropertyChanging("TagID");
                _TagID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagID");
                OnTagIDChanged();
            }
        }
        private global::System.Guid _TagID;
        partial void OnTagIDChanging(global::System.Guid value);
        partial void OnTagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DeviceID
        {
            get
            {
                return _DeviceID;
            }
            set
            {
                OnDeviceIDChanging(value);
                ReportPropertyChanging("DeviceID");
                _DeviceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceID");
                OnDeviceIDChanged();
            }
        }
        private global::System.Guid _DeviceID;
        partial void OnDeviceIDChanging(global::System.Guid value);
        partial void OnDeviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private global::System.Guid _LocationID;
        partial void OnLocationIDChanging(global::System.Guid value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ActivityTime
        {
            get
            {
                return _ActivityTime;
            }
            set
            {
                OnActivityTimeChanging(value);
                ReportPropertyChanging("ActivityTime");
                _ActivityTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityTime");
                OnActivityTimeChanged();
            }
        }
        private global::System.DateTime _ActivityTime;
        partial void OnActivityTimeChanging(global::System.DateTime value);
        partial void OnActivityTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SignalStrength
        {
            get
            {
                return _SignalStrength;
            }
            set
            {
                OnSignalStrengthChanging(value);
                ReportPropertyChanging("SignalStrength");
                _SignalStrength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SignalStrength");
                OnSignalStrengthChanged();
            }
        }
        private global::System.Double _SignalStrength;
        partial void OnSignalStrengthChanging(global::System.Double value);
        partial void OnSignalStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityType
        {
            get
            {
                return _ActivityType;
            }
            set
            {
                OnActivityTypeChanging(value);
                ReportPropertyChanging("ActivityType");
                _ActivityType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityType");
                OnActivityTypeChanged();
            }
        }
        private global::System.Int32 _ActivityType;
        partial void OnActivityTypeChanging(global::System.Int32 value);
        partial void OnActivityTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RawData
        {
            get
            {
                return _RawData;
            }
            set
            {
                OnRawDataChanging(value);
                ReportPropertyChanging("RawData");
                _RawData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RawData");
                OnRawDataChanged();
            }
        }
        private global::System.String _RawData;
        partial void OnRawDataChanging(global::System.String value);
        partial void OnRawDataChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TagActivities_Devices", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_TagActivities_Devices", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_TagActivities_Devices", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_TagActivities_Devices", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("RecipeModel.FK_TagActivities_Devices", "Device", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TagActivities_Tags", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_TagActivities_Tags", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_TagActivities_Tags", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_TagActivities_Tags", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("RecipeModel.FK_TagActivities_Tags", "Tag", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="TagAlert")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TagAlert : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TagAlert object.
        /// </summary>
        /// <param name="tagAlertID">Initial value of the TagAlertID property.</param>
        /// <param name="alertType">Initial value of the AlertType property.</param>
        /// <param name="tagID">Initial value of the TagID property.</param>
        /// <param name="deviceID">Initial value of the DeviceID property.</param>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="severity">Initial value of the Severity property.</param>
        /// <param name="alertTime">Initial value of the AlertTime property.</param>
        public static TagAlert CreateTagAlert(global::System.Guid tagAlertID, global::System.Int32 alertType, global::System.Guid tagID, global::System.Guid deviceID, global::System.Guid locationID, global::System.String message, global::System.Int32 severity, global::System.DateTime alertTime)
        {
            TagAlert tagAlert = new TagAlert();
            tagAlert.TagAlertID = tagAlertID;
            tagAlert.AlertType = alertType;
            tagAlert.TagID = tagID;
            tagAlert.DeviceID = deviceID;
            tagAlert.LocationID = locationID;
            tagAlert.Message = message;
            tagAlert.Severity = severity;
            tagAlert.AlertTime = alertTime;
            return tagAlert;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TagAlertID
        {
            get
            {
                return _TagAlertID;
            }
            set
            {
                if (_TagAlertID != value)
                {
                    OnTagAlertIDChanging(value);
                    ReportPropertyChanging("TagAlertID");
                    _TagAlertID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TagAlertID");
                    OnTagAlertIDChanged();
                }
            }
        }
        private global::System.Guid _TagAlertID;
        partial void OnTagAlertIDChanging(global::System.Guid value);
        partial void OnTagAlertIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlertType
        {
            get
            {
                return _AlertType;
            }
            set
            {
                OnAlertTypeChanging(value);
                ReportPropertyChanging("AlertType");
                _AlertType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertType");
                OnAlertTypeChanged();
            }
        }
        private global::System.Int32 _AlertType;
        partial void OnAlertTypeChanging(global::System.Int32 value);
        partial void OnAlertTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                OnTagIDChanging(value);
                ReportPropertyChanging("TagID");
                _TagID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagID");
                OnTagIDChanged();
            }
        }
        private global::System.Guid _TagID;
        partial void OnTagIDChanging(global::System.Guid value);
        partial void OnTagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DeviceID
        {
            get
            {
                return _DeviceID;
            }
            set
            {
                OnDeviceIDChanging(value);
                ReportPropertyChanging("DeviceID");
                _DeviceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceID");
                OnDeviceIDChanged();
            }
        }
        private global::System.Guid _DeviceID;
        partial void OnDeviceIDChanging(global::System.Guid value);
        partial void OnDeviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private global::System.Guid _LocationID;
        partial void OnLocationIDChanging(global::System.Guid value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Severity
        {
            get
            {
                return _Severity;
            }
            set
            {
                OnSeverityChanging(value);
                ReportPropertyChanging("Severity");
                _Severity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Severity");
                OnSeverityChanged();
            }
        }
        private global::System.Int32 _Severity;
        partial void OnSeverityChanging(global::System.Int32 value);
        partial void OnSeverityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AlertTime
        {
            get
            {
                return _AlertTime;
            }
            set
            {
                OnAlertTimeChanging(value);
                ReportPropertyChanging("AlertTime");
                _AlertTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertTime");
                OnAlertTimeChanged();
            }
        }
        private global::System.DateTime _AlertTime;
        partial void OnAlertTimeChanging(global::System.DateTime value);
        partial void OnAlertTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TagAlerts_Locations", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_TagAlerts_Locations", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_TagAlerts_Locations", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_TagAlerts_Locations", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("RecipeModel.FK_TagAlerts_Locations", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TagAlerts_Tags", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_TagAlerts_Tags", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_TagAlerts_Tags", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_TagAlerts_Tags", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("RecipeModel.FK_TagAlerts_Tags", "Tag", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="TagMove")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TagMove : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TagMove object.
        /// </summary>
        /// <param name="tagMoveID">Initial value of the TagMoveID property.</param>
        /// <param name="tagID">Initial value of the TagID property.</param>
        /// <param name="deviceID">Initial value of the DeviceID property.</param>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="moveTime">Initial value of the MoveTime property.</param>
        /// <param name="signalStrength">Initial value of the SignalStrength property.</param>
        public static TagMove CreateTagMove(global::System.Guid tagMoveID, global::System.Guid tagID, global::System.Guid deviceID, global::System.Guid locationID, global::System.DateTime moveTime, global::System.Double signalStrength)
        {
            TagMove tagMove = new TagMove();
            tagMove.TagMoveID = tagMoveID;
            tagMove.TagID = tagID;
            tagMove.DeviceID = deviceID;
            tagMove.LocationID = locationID;
            tagMove.MoveTime = moveTime;
            tagMove.SignalStrength = signalStrength;
            return tagMove;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TagMoveID
        {
            get
            {
                return _TagMoveID;
            }
            set
            {
                if (_TagMoveID != value)
                {
                    OnTagMoveIDChanging(value);
                    ReportPropertyChanging("TagMoveID");
                    _TagMoveID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TagMoveID");
                    OnTagMoveIDChanged();
                }
            }
        }
        private global::System.Guid _TagMoveID;
        partial void OnTagMoveIDChanging(global::System.Guid value);
        partial void OnTagMoveIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                OnTagIDChanging(value);
                ReportPropertyChanging("TagID");
                _TagID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagID");
                OnTagIDChanged();
            }
        }
        private global::System.Guid _TagID;
        partial void OnTagIDChanging(global::System.Guid value);
        partial void OnTagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DeviceID
        {
            get
            {
                return _DeviceID;
            }
            set
            {
                OnDeviceIDChanging(value);
                ReportPropertyChanging("DeviceID");
                _DeviceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceID");
                OnDeviceIDChanged();
            }
        }
        private global::System.Guid _DeviceID;
        partial void OnDeviceIDChanging(global::System.Guid value);
        partial void OnDeviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private global::System.Guid _LocationID;
        partial void OnLocationIDChanging(global::System.Guid value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MoveTime
        {
            get
            {
                return _MoveTime;
            }
            set
            {
                OnMoveTimeChanging(value);
                ReportPropertyChanging("MoveTime");
                _MoveTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MoveTime");
                OnMoveTimeChanged();
            }
        }
        private global::System.DateTime _MoveTime;
        partial void OnMoveTimeChanging(global::System.DateTime value);
        partial void OnMoveTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SignalStrength
        {
            get
            {
                return _SignalStrength;
            }
            set
            {
                OnSignalStrengthChanging(value);
                ReportPropertyChanging("SignalStrength");
                _SignalStrength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SignalStrength");
                OnSignalStrengthChanged();
            }
        }
        private global::System.Double _SignalStrength;
        partial void OnSignalStrengthChanging(global::System.Double value);
        partial void OnSignalStrengthChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TagMoves_Devices", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_TagMoves_Devices", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_TagMoves_Devices", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("RecipeModel.FK_TagMoves_Devices", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("RecipeModel.FK_TagMoves_Devices", "Device", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TagMoves_Locations", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_TagMoves_Locations", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_TagMoves_Locations", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("RecipeModel.FK_TagMoves_Locations", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("RecipeModel.FK_TagMoves_Locations", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TagMoves_Tags", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_TagMoves_Tags", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_TagMoves_Tags", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("RecipeModel.FK_TagMoves_Tags", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("RecipeModel.FK_TagMoves_Tags", "Tag", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="TicketItemAlias")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TicketItemAlias : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TicketItemAlias object.
        /// </summary>
        /// <param name="ticketItemAliasID">Initial value of the TicketItemAliasID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static TicketItemAlias CreateTicketItemAlias(global::System.Guid ticketItemAliasID, global::System.String description)
        {
            TicketItemAlias ticketItemAlias = new TicketItemAlias();
            ticketItemAlias.TicketItemAliasID = ticketItemAliasID;
            ticketItemAlias.Description = description;
            return ticketItemAlias;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TicketItemAliasID
        {
            get
            {
                return _TicketItemAliasID;
            }
            set
            {
                if (_TicketItemAliasID != value)
                {
                    OnTicketItemAliasIDChanging(value);
                    ReportPropertyChanging("TicketItemAliasID");
                    _TicketItemAliasID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TicketItemAliasID");
                    OnTicketItemAliasIDChanged();
                }
            }
        }
        private global::System.Guid _TicketItemAliasID;
        partial void OnTicketItemAliasIDChanging(global::System.Guid value);
        partial void OnTicketItemAliasIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RecipeID
        {
            get
            {
                return _RecipeID;
            }
            set
            {
                OnRecipeIDChanging(value);
                ReportPropertyChanging("RecipeID");
                _RecipeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecipeID");
                OnRecipeIDChanged();
            }
        }
        private Nullable<global::System.Guid> _RecipeID;
        partial void OnRecipeIDChanging(Nullable<global::System.Guid> value);
        partial void OnRecipeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PosUPC
        {
            get
            {
                return _PosUPC;
            }
            set
            {
                OnPosUPCChanging(value);
                ReportPropertyChanging("PosUPC");
                _PosUPC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PosUPC");
                OnPosUPCChanged();
            }
        }
        private Nullable<global::System.Guid> _PosUPC;
        partial void OnPosUPCChanging(Nullable<global::System.Guid> value);
        partial void OnPosUPCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price = 0.0m;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_TicketItemAliases_Recipe", "Recipe")]
        public Recipe Recipe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("RecipeModel.FK_TicketItemAliases_Recipe", "Recipe").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("RecipeModel.FK_TicketItemAliases_Recipe", "Recipe").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recipe> RecipeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("RecipeModel.FK_TicketItemAliases_Recipe", "Recipe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recipe>("RecipeModel.FK_TicketItemAliases_Recipe", "Recipe", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="UPC")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UPC : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UPC object.
        /// </summary>
        /// <param name="uPCID">Initial value of the UPCID property.</param>
        /// <param name="itemNumber">Initial value of the ItemNumber property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        /// <param name="sizeTypeID">Initial value of the SizeTypeID property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="rootCategoryID">Initial value of the RootCategoryID property.</param>
        /// <param name="quality">Initial value of the Quality property.</param>
        /// <param name="minimumParLevel">Initial value of the MinimumParLevel property.</param>
        /// <param name="pourModifier">Initial value of the PourModifier property.</param>
        /// <param name="allowHalfPour">Initial value of the AllowHalfPour property.</param>
        /// <param name="manufacturerID">Initial value of the ManufacturerID property.</param>
        public static UPC CreateUPC(global::System.Guid uPCID, global::System.String itemNumber, global::System.String name, global::System.Int32 size, global::System.Guid sizeTypeID, global::System.Guid categoryID, global::System.Guid rootCategoryID, global::System.Int32 quality, global::System.Int32 minimumParLevel, global::System.Double pourModifier, global::System.Boolean allowHalfPour, global::System.Guid manufacturerID)
        {
            UPC uPC = new UPC();
            uPC.UPCID = uPCID;
            uPC.ItemNumber = itemNumber;
            uPC.Name = name;
            uPC.Size = size;
            uPC.SizeTypeID = sizeTypeID;
            uPC.CategoryID = categoryID;
            uPC.RootCategoryID = rootCategoryID;
            uPC.Quality = quality;
            uPC.MinimumParLevel = minimumParLevel;
            uPC.PourModifier = pourModifier;
            uPC.AllowHalfPour = allowHalfPour;
            uPC.ManufacturerID = manufacturerID;
            return uPC;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UPCID
        {
            get
            {
                return _UPCID;
            }
            set
            {
                if (_UPCID != value)
                {
                    OnUPCIDChanging(value);
                    ReportPropertyChanging("UPCID");
                    _UPCID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UPCID");
                    OnUPCIDChanged();
                }
            }
        }
        private global::System.Guid _UPCID;
        partial void OnUPCIDChanging(global::System.Guid value);
        partial void OnUPCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemNumber
        {
            get
            {
                return _ItemNumber;
            }
            set
            {
                OnItemNumberChanging(value);
                ReportPropertyChanging("ItemNumber");
                _ItemNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemNumber");
                OnItemNumberChanged();
            }
        }
        private global::System.String _ItemNumber;
        partial void OnItemNumberChanging(global::System.String value);
        partial void OnItemNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.Int32 _Size;
        partial void OnSizeChanging(global::System.Int32 value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SizeTypeID
        {
            get
            {
                return _SizeTypeID;
            }
            set
            {
                OnSizeTypeIDChanging(value);
                ReportPropertyChanging("SizeTypeID");
                _SizeTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SizeTypeID");
                OnSizeTypeIDChanged();
            }
        }
        private global::System.Guid _SizeTypeID;
        partial void OnSizeTypeIDChanging(global::System.Guid value);
        partial void OnSizeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Guid _CategoryID;
        partial void OnCategoryIDChanging(global::System.Guid value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RootCategoryID
        {
            get
            {
                return _RootCategoryID;
            }
            set
            {
                OnRootCategoryIDChanging(value);
                ReportPropertyChanging("RootCategoryID");
                _RootCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RootCategoryID");
                OnRootCategoryIDChanged();
            }
        }
        private global::System.Guid _RootCategoryID;
        partial void OnRootCategoryIDChanging(global::System.Guid value);
        partial void OnRootCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quality
        {
            get
            {
                return _Quality;
            }
            set
            {
                OnQualityChanging(value);
                ReportPropertyChanging("Quality");
                _Quality = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quality");
                OnQualityChanged();
            }
        }
        private global::System.Int32 _Quality;
        partial void OnQualityChanging(global::System.Int32 value);
        partial void OnQualityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnitPrice;
        partial void OnUnitPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> StandardPriceID
        {
            get
            {
                return _StandardPriceID;
            }
            set
            {
                OnStandardPriceIDChanging(value);
                ReportPropertyChanging("StandardPriceID");
                _StandardPriceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardPriceID");
                OnStandardPriceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _StandardPriceID;
        partial void OnStandardPriceIDChanging(Nullable<global::System.Guid> value);
        partial void OnStandardPriceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> StandardNozzleID
        {
            get
            {
                return _StandardNozzleID;
            }
            set
            {
                OnStandardNozzleIDChanging(value);
                ReportPropertyChanging("StandardNozzleID");
                _StandardNozzleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardNozzleID");
                OnStandardNozzleIDChanged();
            }
        }
        private Nullable<global::System.Guid> _StandardNozzleID;
        partial void OnStandardNozzleIDChanging(Nullable<global::System.Guid> value);
        partial void OnStandardNozzleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinimumParLevel
        {
            get
            {
                return _MinimumParLevel;
            }
            set
            {
                OnMinimumParLevelChanging(value);
                ReportPropertyChanging("MinimumParLevel");
                _MinimumParLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinimumParLevel");
                OnMinimumParLevelChanged();
            }
        }
        private global::System.Int32 _MinimumParLevel;
        partial void OnMinimumParLevelChanging(global::System.Int32 value);
        partial void OnMinimumParLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PourModifier
        {
            get
            {
                return _PourModifier;
            }
            set
            {
                OnPourModifierChanging(value);
                ReportPropertyChanging("PourModifier");
                _PourModifier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PourModifier");
                OnPourModifierChanged();
            }
        }
        private global::System.Double _PourModifier;
        partial void OnPourModifierChanging(global::System.Double value);
        partial void OnPourModifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowHalfPour
        {
            get
            {
                return _AllowHalfPour;
            }
            set
            {
                OnAllowHalfPourChanging(value);
                ReportPropertyChanging("AllowHalfPour");
                _AllowHalfPour = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowHalfPour");
                OnAllowHalfPourChanged();
            }
        }
        private global::System.Boolean _AllowHalfPour;
        partial void OnAllowHalfPourChanging(global::System.Boolean value);
        partial void OnAllowHalfPourChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ChildUPCID
        {
            get
            {
                return _ChildUPCID;
            }
            set
            {
                OnChildUPCIDChanging(value);
                ReportPropertyChanging("ChildUPCID");
                _ChildUPCID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChildUPCID");
                OnChildUPCIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ChildUPCID;
        partial void OnChildUPCIDChanging(Nullable<global::System.Guid> value);
        partial void OnChildUPCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BottleCount
        {
            get
            {
                return _BottleCount;
            }
            set
            {
                OnBottleCountChanging(value);
                ReportPropertyChanging("BottleCount");
                _BottleCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BottleCount");
                OnBottleCountChanged();
            }
        }
        private Nullable<global::System.Int32> _BottleCount;
        partial void OnBottleCountChanging(Nullable<global::System.Int32> value);
        partial void OnBottleCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ManufacturerID
        {
            get
            {
                return _ManufacturerID;
            }
            set
            {
                OnManufacturerIDChanging(value);
                ReportPropertyChanging("ManufacturerID");
                _ManufacturerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManufacturerID");
                OnManufacturerIDChanged();
            }
        }
        private global::System.Guid _ManufacturerID;
        partial void OnManufacturerIDChanging(global::System.Guid value);
        partial void OnManufacturerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomID
        {
            get
            {
                return _CustomID;
            }
            set
            {
                OnCustomIDChanging(value);
                ReportPropertyChanging("CustomID");
                _CustomID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomID");
                OnCustomIDChanged();
            }
        }
        private global::System.String _CustomID;
        partial void OnCustomIDChanging(global::System.String value);
        partial void OnCustomIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UPCs_SubCategory", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("RecipeModel.FK_UPCs_SubCategory", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("RecipeModel.FK_UPCs_SubCategory", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("RecipeModel.FK_UPCs_SubCategory", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("RecipeModel.FK_UPCs_SubCategory", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Ingredients_UPCID", "Ingredient")]
        public EntityCollection<Ingredient> Ingredients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ingredient>("RecipeModel.FK_Ingredients_UPCID", "Ingredient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ingredient>("RecipeModel.FK_Ingredients_UPCID", "Ingredient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UPCs_Manufacturers", "Manufacturer")]
        public Manufacturer Manufacturer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("RecipeModel.FK_UPCs_Manufacturers", "Manufacturer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("RecipeModel.FK_UPCs_Manufacturers", "Manufacturer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Manufacturer> ManufacturerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("RecipeModel.FK_UPCs_Manufacturers", "Manufacturer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Manufacturer>("RecipeModel.FK_UPCs_Manufacturers", "Manufacturer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UPCs_SizeType", "SizeType")]
        public SizeType SizeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SizeType>("RecipeModel.FK_UPCs_SizeType", "SizeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SizeType>("RecipeModel.FK_UPCs_SizeType", "SizeType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SizeType> SizeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SizeType>("RecipeModel.FK_UPCs_SizeType", "SizeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SizeType>("RecipeModel.FK_UPCs_SizeType", "SizeType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Inventories_UPC", "Inventory")]
        public EntityCollection<Inventory> Inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inventory>("RecipeModel.FK_Inventories_UPC", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inventory>("RecipeModel.FK_Inventories_UPC", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_ParLevel_UPC", "ParLevel")]
        public EntityCollection<ParLevel> ParLevels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParLevel>("RecipeModel.FK_ParLevel_UPC", "ParLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParLevel>("RecipeModel.FK_ParLevel_UPC", "ParLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UPCs_StandardNozzles", "StandardNozzle")]
        public StandardNozzle StandardNozzle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardNozzle>("RecipeModel.FK_UPCs_StandardNozzles", "StandardNozzle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardNozzle>("RecipeModel.FK_UPCs_StandardNozzles", "StandardNozzle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StandardNozzle> StandardNozzleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardNozzle>("RecipeModel.FK_UPCs_StandardNozzles", "StandardNozzle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StandardNozzle>("RecipeModel.FK_UPCs_StandardNozzles", "StandardNozzle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UPCs_StandardPricing", "StandardPrice")]
        public StandardPrice StandardPrice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardPrice>("RecipeModel.FK_UPCs_StandardPricing", "StandardPrice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardPrice>("RecipeModel.FK_UPCs_StandardPricing", "StandardPrice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StandardPrice> StandardPriceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StandardPrice>("RecipeModel.FK_UPCs_StandardPricing", "StandardPrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StandardPrice>("RecipeModel.FK_UPCs_StandardPricing", "StandardPrice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_Pours_UPCs", "Pour")]
        public EntityCollection<Pour> Pours
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pour>("RecipeModel.FK_Pours_UPCs", "Pour");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pour>("RecipeModel.FK_Pours_UPCs", "Pour", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="properName">Initial value of the ProperName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User CreateUser(global::System.Guid userID, global::System.String userName, global::System.String properName, global::System.String password)
        {
            User user = new User();
            user.UserID = userID;
            user.UserName = userName;
            user.ProperName = properName;
            user.Password = password;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProperName
        {
            get
            {
                return _ProperName;
            }
            set
            {
                OnProperNameChanging(value);
                ReportPropertyChanging("ProperName");
                _ProperName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProperName");
                OnProperNameChanged();
            }
        }
        private global::System.String _ProperName;
        partial void OnProperNameChanging(global::System.String value);
        partial void OnProperNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserData
        {
            get
            {
                return _UserData;
            }
            set
            {
                OnUserDataChanging(value);
                ReportPropertyChanging("UserData");
                _UserData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserData");
                OnUserDataChanged();
            }
        }
        private global::System.String _UserData;
        partial void OnUserDataChanging(global::System.String value);
        partial void OnUserDataChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UserSessions_Users", "UserSession")]
        public EntityCollection<UserSession> UserSessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSession>("RecipeModel.FK_UserSessions_Users", "UserSession");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSession>("RecipeModel.FK_UserSessions_Users", "UserSession", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UsersXOrganizations_Users", "UsersXOrganization")]
        public EntityCollection<UsersXOrganization> UsersXOrganizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersXOrganization>("RecipeModel.FK_UsersXOrganizations_Users", "UsersXOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersXOrganization>("RecipeModel.FK_UsersXOrganizations_Users", "UsersXOrganization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "UsersXGroups", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("RecipeModel.UsersXGroups", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("RecipeModel.UsersXGroups", "Group", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="UserSession")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserSession : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserSession object.
        /// </summary>
        /// <param name="userSessionID">Initial value of the UserSessionID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="sessionID">Initial value of the SessionID property.</param>
        public static UserSession CreateUserSession(global::System.Guid userSessionID, global::System.Guid userID, global::System.Guid sessionID)
        {
            UserSession userSession = new UserSession();
            userSession.UserSessionID = userSessionID;
            userSession.UserID = userID;
            userSession.SessionID = sessionID;
            return userSession;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserSessionID
        {
            get
            {
                return _UserSessionID;
            }
            set
            {
                if (_UserSessionID != value)
                {
                    OnUserSessionIDChanging(value);
                    ReportPropertyChanging("UserSessionID");
                    _UserSessionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserSessionID");
                    OnUserSessionIDChanged();
                }
            }
        }
        private global::System.Guid _UserSessionID;
        partial void OnUserSessionIDChanging(global::System.Guid value);
        partial void OnUserSessionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SessionID
        {
            get
            {
                return _SessionID;
            }
            set
            {
                OnSessionIDChanging(value);
                ReportPropertyChanging("SessionID");
                _SessionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionID");
                OnSessionIDChanged();
            }
        }
        private global::System.Guid _SessionID;
        partial void OnSessionIDChanging(global::System.Guid value);
        partial void OnSessionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UserSessions_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RecipeModel.FK_UserSessions_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RecipeModel.FK_UserSessions_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RecipeModel.FK_UserSessions_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RecipeModel.FK_UserSessions_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RecipeModel", Name="UsersXOrganization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersXOrganization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersXOrganization object.
        /// </summary>
        /// <param name="uxOID">Initial value of the UxOID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        public static UsersXOrganization CreateUsersXOrganization(global::System.Guid uxOID, global::System.Guid userID, global::System.Guid organizationID)
        {
            UsersXOrganization usersXOrganization = new UsersXOrganization();
            usersXOrganization.UxOID = uxOID;
            usersXOrganization.UserID = userID;
            usersXOrganization.OrganizationID = organizationID;
            return usersXOrganization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UxOID
        {
            get
            {
                return _UxOID;
            }
            set
            {
                if (_UxOID != value)
                {
                    OnUxOIDChanging(value);
                    ReportPropertyChanging("UxOID");
                    _UxOID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UxOID");
                    OnUxOIDChanged();
                }
            }
        }
        private global::System.Guid _UxOID;
        partial void OnUxOIDChanging(global::System.Guid value);
        partial void OnUxOIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UsersXOrganizations_Organization", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("RecipeModel.FK_UsersXOrganizations_Organization", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("RecipeModel.FK_UsersXOrganizations_Organization", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("RecipeModel.FK_UsersXOrganizations_Organization", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("RecipeModel.FK_UsersXOrganizations_Organization", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RecipeModel", "FK_UsersXOrganizations_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RecipeModel.FK_UsersXOrganizations_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RecipeModel.FK_UsersXOrganizations_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RecipeModel.FK_UsersXOrganizations_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RecipeModel.FK_UsersXOrganizations_Users", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
