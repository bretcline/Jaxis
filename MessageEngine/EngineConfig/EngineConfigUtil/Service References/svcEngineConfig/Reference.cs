//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EngineConfigUtil.svcEngineConfig {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="svcEngineConfig.IEngineConfigService")]
    public interface IEngineConfigService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/GetDeviceList", ReplyAction="http://tempuri.org/IEngineConfigService/GetDeviceListResponse")]
        System.Collections.Generic.List<Jaxis.Engine.Base.Device.DeviceConfig> GetDeviceList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/GetDeviceState", ReplyAction="http://tempuri.org/IEngineConfigService/GetDeviceStateResponse")]
        Jaxis.Interfaces.DeviceState GetDeviceState(Jaxis.Engine.Base.Device.DeviceConfig Device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/StartDevice", ReplyAction="http://tempuri.org/IEngineConfigService/StartDeviceResponse")]
        void StartDevice(Jaxis.Engine.Base.Device.DeviceConfig Device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/StopDevice", ReplyAction="http://tempuri.org/IEngineConfigService/StopDeviceResponse")]
        void StopDevice(Jaxis.Engine.Base.Device.DeviceConfig Device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/GetEventLog", ReplyAction="http://tempuri.org/IEngineConfigService/GetEventLogResponse")]
        string GetEventLog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/GetEngineState", ReplyAction="http://tempuri.org/IEngineConfigService/GetEngineStateResponse")]
        Jaxis.Engine.Base.Device.EngineState GetEngineState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/StopEngine", ReplyAction="http://tempuri.org/IEngineConfigService/StopEngineResponse")]
        void StopEngine();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/StartEngine", ReplyAction="http://tempuri.org/IEngineConfigService/StartEngineResponse")]
        void StartEngine();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/GetEngineRev", ReplyAction="http://tempuri.org/IEngineConfigService/GetEngineRevResponse")]
        string GetEngineRev();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/GetLocalDevices", ReplyAction="http://tempuri.org/IEngineConfigService/GetLocalDevicesResponse")]
        System.Collections.Generic.List<Jaxis.Engine.Base.Device.DeviceConfig> GetLocalDevices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/AddDevice", ReplyAction="http://tempuri.org/IEngineConfigService/AddDeviceResponse")]
        void AddDevice(Jaxis.Engine.Base.Device.DeviceConfig _Config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/GetLocalFilters", ReplyAction="http://tempuri.org/IEngineConfigService/GetLocalFiltersResponse")]
        System.Collections.Generic.List<Jaxis.Engine.Base.Device.FilterConfig> GetLocalFilters();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/AddFilter", ReplyAction="http://tempuri.org/IEngineConfigService/AddFilterResponse")]
        void AddFilter(Jaxis.Engine.Base.Device.DeviceConfig _Device, Jaxis.Engine.Base.Device.FilterConfig _Config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/DownloadDevicePlugin", ReplyAction="http://tempuri.org/IEngineConfigService/DownloadDevicePluginResponse")]
        string DownloadDevicePlugin(Jaxis.Engine.Base.Device.DeviceConfig _Config, byte[] Device, System.Collections.Generic.List<string> DependentNames, System.Collections.Generic.List<byte[]> Dependents, byte[] _iv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/DownloadFilterPlugin", ReplyAction="http://tempuri.org/IEngineConfigService/DownloadFilterPluginResponse")]
        string DownloadFilterPlugin(Jaxis.Engine.Base.Device.DeviceConfig _Device, Jaxis.Engine.Base.Device.FilterConfig _Config, byte[] Device, byte[] _iv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/UpdateOptions", ReplyAction="http://tempuri.org/IEngineConfigService/UpdateOptionsResponse")]
        void UpdateOptions(Jaxis.Engine.Base.Device.DeviceConfig _Config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/UpdateFilterOptions", ReplyAction="http://tempuri.org/IEngineConfigService/UpdateFilterOptionsResponse")]
        void UpdateFilterOptions(Jaxis.Engine.Base.Device.DeviceConfig _Config, Jaxis.Engine.Base.Device.FilterConfig _FilterConfig);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/UnLoadDevice", ReplyAction="http://tempuri.org/IEngineConfigService/UnLoadDeviceResponse")]
        void UnLoadDevice(Jaxis.Engine.Base.Device.DeviceConfig _Config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/UnLoadFilter", ReplyAction="http://tempuri.org/IEngineConfigService/UnLoadFilterResponse")]
        void UnLoadFilter(Jaxis.Engine.Base.Device.DeviceConfig _Config, Jaxis.Engine.Base.Device.FilterConfig _FilterConfig);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEngineConfigServiceChannel : EngineConfigUtil.svcEngineConfig.IEngineConfigService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EngineConfigServiceClient : System.ServiceModel.ClientBase<EngineConfigUtil.svcEngineConfig.IEngineConfigService>, EngineConfigUtil.svcEngineConfig.IEngineConfigService {
        
        public EngineConfigServiceClient() {
        }
        
        public EngineConfigServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EngineConfigServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EngineConfigServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EngineConfigServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Jaxis.Engine.Base.Device.DeviceConfig> GetDeviceList() {
            return base.Channel.GetDeviceList();
        }
        
        public Jaxis.Interfaces.DeviceState GetDeviceState(Jaxis.Engine.Base.Device.DeviceConfig Device) {
            return base.Channel.GetDeviceState(Device);
        }
        
        public void StartDevice(Jaxis.Engine.Base.Device.DeviceConfig Device) {
            base.Channel.StartDevice(Device);
        }
        
        public void StopDevice(Jaxis.Engine.Base.Device.DeviceConfig Device) {
            base.Channel.StopDevice(Device);
        }
        
        public string GetEventLog() {
            return base.Channel.GetEventLog();
        }
        
        public Jaxis.Engine.Base.Device.EngineState GetEngineState() {
            return base.Channel.GetEngineState();
        }
        
        public void StopEngine() {
            base.Channel.StopEngine();
        }
        
        public void StartEngine() {
            base.Channel.StartEngine();
        }
        
        public string GetEngineRev() {
            return base.Channel.GetEngineRev();
        }
        
        public System.Collections.Generic.List<Jaxis.Engine.Base.Device.DeviceConfig> GetLocalDevices() {
            return base.Channel.GetLocalDevices();
        }
        
        public void AddDevice(Jaxis.Engine.Base.Device.DeviceConfig _Config) {
            base.Channel.AddDevice(_Config);
        }
        
        public System.Collections.Generic.List<Jaxis.Engine.Base.Device.FilterConfig> GetLocalFilters() {
            return base.Channel.GetLocalFilters();
        }
        
        public void AddFilter(Jaxis.Engine.Base.Device.DeviceConfig _Device, Jaxis.Engine.Base.Device.FilterConfig _Config) {
            base.Channel.AddFilter(_Device, _Config);
        }
        
        public string DownloadDevicePlugin(Jaxis.Engine.Base.Device.DeviceConfig _Config, byte[] Device, System.Collections.Generic.List<string> DependentNames, System.Collections.Generic.List<byte[]> Dependents, byte[] _iv) {
            return base.Channel.DownloadDevicePlugin(_Config, Device, DependentNames, Dependents, _iv);
        }
        
        public string DownloadFilterPlugin(Jaxis.Engine.Base.Device.DeviceConfig _Device, Jaxis.Engine.Base.Device.FilterConfig _Config, byte[] Device, byte[] _iv) {
            return base.Channel.DownloadFilterPlugin(_Device, _Config, Device, _iv);
        }
        
        public void UpdateOptions(Jaxis.Engine.Base.Device.DeviceConfig _Config) {
            base.Channel.UpdateOptions(_Config);
        }
        
        public void UpdateFilterOptions(Jaxis.Engine.Base.Device.DeviceConfig _Config, Jaxis.Engine.Base.Device.FilterConfig _FilterConfig) {
            base.Channel.UpdateFilterOptions(_Config, _FilterConfig);
        }
        
        public void UnLoadDevice(Jaxis.Engine.Base.Device.DeviceConfig _Config) {
            base.Channel.UnLoadDevice(_Config);
        }
        
        public void UnLoadFilter(Jaxis.Engine.Base.Device.DeviceConfig _Config, Jaxis.Engine.Base.Device.FilterConfig _FilterConfig) {
            base.Channel.UnLoadFilter(_Config, _FilterConfig);
        }
    }
}
