//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EngineConfigVersionDll.EngineWCFConfigServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceConfig", Namespace="http://schemas.datacontract.org/2004/07/Jaxis.Engine.Base.Device")]
    [System.SerializableAttribute()]
    public partial class DeviceConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AssemblyNamek__BackingFieldField;
        
        private string AssemblyTypek__BackingFieldField;
        
        private string AssemblyVersionk__BackingFieldField;
        
        private EngineConfigVersionDll.EngineWCFConfigServiceReference.MessageType ConsumerMessageTypek__BackingFieldField;
        
        private System.Collections.Generic.List<EngineConfigVersionDll.EngineWCFConfigServiceReference.FilterConfig> Filtersk__BackingFieldField;
        
        private string IDk__BackingFieldField;
        
        private string Namek__BackingFieldField;
        
        private System.Collections.Generic.List<string> Optionsk__BackingFieldField;
        
        private EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceState Statek__BackingFieldField;
        
        private EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceType Typek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AssemblyName>k__BackingField", IsRequired=true)]
        public string AssemblyNamek__BackingField {
            get {
                return this.AssemblyNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyNamek__BackingFieldField, value) != true)) {
                    this.AssemblyNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("AssemblyNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AssemblyType>k__BackingField", IsRequired=true)]
        public string AssemblyTypek__BackingField {
            get {
                return this.AssemblyTypek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyTypek__BackingFieldField, value) != true)) {
                    this.AssemblyTypek__BackingFieldField = value;
                    this.RaisePropertyChanged("AssemblyTypek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AssemblyVersion>k__BackingField", IsRequired=true)]
        public string AssemblyVersionk__BackingField {
            get {
                return this.AssemblyVersionk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyVersionk__BackingFieldField, value) != true)) {
                    this.AssemblyVersionk__BackingFieldField = value;
                    this.RaisePropertyChanged("AssemblyVersionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ConsumerMessageType>k__BackingField", IsRequired=true)]
        public EngineConfigVersionDll.EngineWCFConfigServiceReference.MessageType ConsumerMessageTypek__BackingField {
            get {
                return this.ConsumerMessageTypek__BackingFieldField;
            }
            set {
                if ((this.ConsumerMessageTypek__BackingFieldField.Equals(value) != true)) {
                    this.ConsumerMessageTypek__BackingFieldField = value;
                    this.RaisePropertyChanged("ConsumerMessageTypek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Filters>k__BackingField", IsRequired=true)]
        public System.Collections.Generic.List<EngineConfigVersionDll.EngineWCFConfigServiceReference.FilterConfig> Filtersk__BackingField {
            get {
                return this.Filtersk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Filtersk__BackingFieldField, value) != true)) {
                    this.Filtersk__BackingFieldField = value;
                    this.RaisePropertyChanged("Filtersk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ID>k__BackingField", IsRequired=true)]
        public string IDk__BackingField {
            get {
                return this.IDk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.IDk__BackingFieldField, value) != true)) {
                    this.IDk__BackingFieldField = value;
                    this.RaisePropertyChanged("IDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Name>k__BackingField", IsRequired=true)]
        public string Namek__BackingField {
            get {
                return this.Namek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Namek__BackingFieldField, value) != true)) {
                    this.Namek__BackingFieldField = value;
                    this.RaisePropertyChanged("Namek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Options>k__BackingField", IsRequired=true)]
        public System.Collections.Generic.List<string> Optionsk__BackingField {
            get {
                return this.Optionsk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Optionsk__BackingFieldField, value) != true)) {
                    this.Optionsk__BackingFieldField = value;
                    this.RaisePropertyChanged("Optionsk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<State>k__BackingField", IsRequired=true)]
        public EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceState Statek__BackingField {
            get {
                return this.Statek__BackingFieldField;
            }
            set {
                if ((this.Statek__BackingFieldField.Equals(value) != true)) {
                    this.Statek__BackingFieldField = value;
                    this.RaisePropertyChanged("Statek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Type>k__BackingField", IsRequired=true)]
        public EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceType Typek__BackingField {
            get {
                return this.Typek__BackingFieldField;
            }
            set {
                if ((this.Typek__BackingFieldField.Equals(value) != true)) {
                    this.Typek__BackingFieldField = value;
                    this.RaisePropertyChanged("Typek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageType", Namespace="http://schemas.datacontract.org/2004/07/Jaxis.Interfaces")]
    public enum MessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 65535,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RawData = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DBData = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UIData = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterConfig", Namespace="http://schemas.datacontract.org/2004/07/Jaxis.Engine.Base.Device")]
    [System.SerializableAttribute()]
    public partial class FilterConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AssemblyNamek__BackingFieldField;
        
        private string AssemblyTypek__BackingFieldField;
        
        private string AssemblyVersionk__BackingFieldField;
        
        private string Namek__BackingFieldField;
        
        private System.Collections.Generic.List<string> Optionsk__BackingFieldField;
        
        private EngineConfigVersionDll.EngineWCFConfigServiceReference.FilterType Typek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AssemblyName>k__BackingField", IsRequired=true)]
        public string AssemblyNamek__BackingField {
            get {
                return this.AssemblyNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyNamek__BackingFieldField, value) != true)) {
                    this.AssemblyNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("AssemblyNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AssemblyType>k__BackingField", IsRequired=true)]
        public string AssemblyTypek__BackingField {
            get {
                return this.AssemblyTypek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyTypek__BackingFieldField, value) != true)) {
                    this.AssemblyTypek__BackingFieldField = value;
                    this.RaisePropertyChanged("AssemblyTypek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AssemblyVersion>k__BackingField", IsRequired=true)]
        public string AssemblyVersionk__BackingField {
            get {
                return this.AssemblyVersionk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyVersionk__BackingFieldField, value) != true)) {
                    this.AssemblyVersionk__BackingFieldField = value;
                    this.RaisePropertyChanged("AssemblyVersionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Name>k__BackingField", IsRequired=true)]
        public string Namek__BackingField {
            get {
                return this.Namek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Namek__BackingFieldField, value) != true)) {
                    this.Namek__BackingFieldField = value;
                    this.RaisePropertyChanged("Namek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Options>k__BackingField", IsRequired=true)]
        public System.Collections.Generic.List<string> Optionsk__BackingField {
            get {
                return this.Optionsk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Optionsk__BackingFieldField, value) != true)) {
                    this.Optionsk__BackingFieldField = value;
                    this.RaisePropertyChanged("Optionsk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Type>k__BackingField", IsRequired=true)]
        public EngineConfigVersionDll.EngineWCFConfigServiceReference.FilterType Typek__BackingField {
            get {
                return this.Typek__BackingFieldField;
            }
            set {
                if ((this.Typek__BackingFieldField.Equals(value) != true)) {
                    this.Typek__BackingFieldField = value;
                    this.RaisePropertyChanged("Typek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceState", Namespace="http://schemas.datacontract.org/2004/07/Jaxis.Interfaces")]
    public enum DeviceState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Started = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stopped = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceType", Namespace="http://schemas.datacontract.org/2004/07/Jaxis.Interfaces")]
    public enum DeviceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataProducer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataConsumer = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataProducerConsumer = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterType", Namespace="http://schemas.datacontract.org/2004/07/Jaxis.Interfaces")]
    public enum FilterType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inbound = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Outbound = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InOut = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EngineState", Namespace="http://schemas.datacontract.org/2004/07/Jaxis.Engine.Base.Device")]
    public enum EngineState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Started = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stopped = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EngineWCFConfigServiceReference.IEngineConfigService")]
    public interface IEngineConfigService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/GetDeviceList", ReplyAction="http://tempuri.org/IEngineConfigService/GetDeviceListResponse")]
        System.Collections.Generic.List<EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig> GetDeviceList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/GetDeviceState", ReplyAction="http://tempuri.org/IEngineConfigService/GetDeviceStateResponse")]
        EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceState GetDeviceState(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig Device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/StartDevice", ReplyAction="http://tempuri.org/IEngineConfigService/StartDeviceResponse")]
        void StartDevice(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig Device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/StopDevice", ReplyAction="http://tempuri.org/IEngineConfigService/StopDeviceResponse")]
        void StopDevice(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig Device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/GetEventLog", ReplyAction="http://tempuri.org/IEngineConfigService/GetEventLogResponse")]
        string GetEventLog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/GetEngineState", ReplyAction="http://tempuri.org/IEngineConfigService/GetEngineStateResponse")]
        EngineConfigVersionDll.EngineWCFConfigServiceReference.EngineState GetEngineState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/StopEngine", ReplyAction="http://tempuri.org/IEngineConfigService/StopEngineResponse")]
        void StopEngine();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/StartEngine", ReplyAction="http://tempuri.org/IEngineConfigService/StartEngineResponse")]
        void StartEngine();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/GetEngineRev", ReplyAction="http://tempuri.org/IEngineConfigService/GetEngineRevResponse")]
        string GetEngineRev();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/DownloadDevicePlugin", ReplyAction="http://tempuri.org/IEngineConfigService/DownloadDevicePluginResponse")]
        string DownloadDevicePlugin(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig _Config, byte[] Device, System.Collections.Generic.List<string> DependentNames, System.Collections.Generic.List<byte[]> Dependents, byte[] _iv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/DownloadFilterPlugin", ReplyAction="http://tempuri.org/IEngineConfigService/DownloadFilterPluginResponse")]
        string DownloadFilterPlugin(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig _Device, EngineConfigVersionDll.EngineWCFConfigServiceReference.FilterConfig _Config, byte[] Device, byte[] _iv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/UpdateOptions", ReplyAction="http://tempuri.org/IEngineConfigService/UpdateOptionsResponse")]
        void UpdateOptions(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig _Config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/UpdateFilterOptions", ReplyAction="http://tempuri.org/IEngineConfigService/UpdateFilterOptionsResponse")]
        void UpdateFilterOptions(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig _Config, EngineConfigVersionDll.EngineWCFConfigServiceReference.FilterConfig _FilterConfig);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/UnLoadDevice", ReplyAction="http://tempuri.org/IEngineConfigService/UnLoadDeviceResponse")]
        void UnLoadDevice(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig _Config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEngineConfigService/UnLoadFilter", ReplyAction="http://tempuri.org/IEngineConfigService/UnLoadFilterResponse")]
        void UnLoadFilter(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig _Config, EngineConfigVersionDll.EngineWCFConfigServiceReference.FilterConfig _FilterConfig);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEngineConfigServiceChannel : EngineConfigVersionDll.EngineWCFConfigServiceReference.IEngineConfigService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EngineConfigServiceClient : System.ServiceModel.ClientBase<EngineConfigVersionDll.EngineWCFConfigServiceReference.IEngineConfigService>, EngineConfigVersionDll.EngineWCFConfigServiceReference.IEngineConfigService {
        
        public EngineConfigServiceClient() {
        }
        
        public EngineConfigServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EngineConfigServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EngineConfigServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EngineConfigServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig> GetDeviceList() {
            return base.Channel.GetDeviceList();
        }
        
        public EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceState GetDeviceState(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig Device) {
            return base.Channel.GetDeviceState(Device);
        }
        
        public void StartDevice(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig Device) {
            base.Channel.StartDevice(Device);
        }
        
        public void StopDevice(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig Device) {
            base.Channel.StopDevice(Device);
        }
        
        public string GetEventLog() {
            return base.Channel.GetEventLog();
        }
        
        public EngineConfigVersionDll.EngineWCFConfigServiceReference.EngineState GetEngineState() {
            return base.Channel.GetEngineState();
        }
        
        public void StopEngine() {
            base.Channel.StopEngine();
        }
        
        public void StartEngine() {
            base.Channel.StartEngine();
        }
        
        public string GetEngineRev() {
            return base.Channel.GetEngineRev();
        }
        
        public string DownloadDevicePlugin(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig _Config, byte[] Device, System.Collections.Generic.List<string> DependentNames, System.Collections.Generic.List<byte[]> Dependents, byte[] _iv) {
            return base.Channel.DownloadDevicePlugin(_Config, Device, DependentNames, Dependents, _iv);
        }
        
        public string DownloadFilterPlugin(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig _Device, EngineConfigVersionDll.EngineWCFConfigServiceReference.FilterConfig _Config, byte[] Device, byte[] _iv) {
            return base.Channel.DownloadFilterPlugin(_Device, _Config, Device, _iv);
        }
        
        public void UpdateOptions(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig _Config) {
            base.Channel.UpdateOptions(_Config);
        }
        
        public void UpdateFilterOptions(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig _Config, EngineConfigVersionDll.EngineWCFConfigServiceReference.FilterConfig _FilterConfig) {
            base.Channel.UpdateFilterOptions(_Config, _FilterConfig);
        }
        
        public void UnLoadDevice(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig _Config) {
            base.Channel.UnLoadDevice(_Config);
        }
        
        public void UnLoadFilter(EngineConfigVersionDll.EngineWCFConfigServiceReference.DeviceConfig _Config, EngineConfigVersionDll.EngineWCFConfigServiceReference.FilterConfig _FilterConfig) {
            base.Channel.UnLoadFilter(_Config, _FilterConfig);
        }
    }
}
